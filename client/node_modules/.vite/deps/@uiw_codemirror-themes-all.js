import {
  HighlightStyle,
  syntaxHighlighting,
  tags
} from "./chunk-EET4MZBK.js";
import {
  EditorView
} from "./chunk-BK2XWACF.js";
import {
  _extends
} from "./chunk-KBUAZBQ3.js";
import "./chunk-WGZ5GUV2.js";
import "./chunk-3EJPJMEH.js";

// node_modules/@uiw/codemirror-themes/esm/index.js
var createTheme = (_ref) => {
  var {
    theme,
    settings = {},
    styles = []
  } = _ref;
  var themeOptions = {
    ".cm-gutters": {}
  };
  var baseStyle = {};
  if (settings.background) {
    baseStyle.backgroundColor = settings.background;
  }
  if (settings.backgroundImage) {
    baseStyle.backgroundImage = settings.backgroundImage;
  }
  if (settings.foreground) {
    baseStyle.color = settings.foreground;
  }
  if (settings.background || settings.foreground) {
    themeOptions["&"] = baseStyle;
  }
  if (settings.fontFamily) {
    themeOptions["&.cm-editor .cm-scroller"] = {
      fontFamily: settings.fontFamily
    };
  }
  if (settings.gutterBackground) {
    themeOptions[".cm-gutters"].backgroundColor = settings.gutterBackground;
  }
  if (settings.gutterForeground) {
    themeOptions[".cm-gutters"].color = settings.gutterForeground;
  }
  if (settings.gutterBorder) {
    themeOptions[".cm-gutters"].borderRightColor = settings.gutterBorder;
  }
  if (settings.caret) {
    themeOptions[".cm-content"] = {
      caretColor: settings.caret
    };
    themeOptions[".cm-cursor, .cm-dropCursor"] = {
      borderLeftColor: settings.caret
    };
  }
  var activeLineGutterStyle = {};
  if (settings.gutterActiveForeground) {
    activeLineGutterStyle.color = settings.gutterActiveForeground;
  }
  if (settings.lineHighlight) {
    themeOptions[".cm-activeLine"] = {
      backgroundColor: settings.lineHighlight
    };
    activeLineGutterStyle.backgroundColor = settings.lineHighlight;
  }
  themeOptions[".cm-activeLineGutter"] = activeLineGutterStyle;
  if (settings.selection) {
    themeOptions["&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"] = {
      background: settings.selection + " !important"
    };
  }
  if (settings.selectionMatch) {
    themeOptions["& .cm-selectionMatch"] = {
      backgroundColor: settings.selectionMatch
    };
  }
  var themeExtension = EditorView.theme(themeOptions, {
    dark: theme === "dark"
  });
  var highlightStyle = HighlightStyle.define(styles);
  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];
  return extension;
};

// node_modules/@uiw/codemirror-theme-abcdef/esm/index.js
var defaultSettingsAbcdef = {
  background: "#0f0f0f",
  foreground: "#defdef",
  caret: "#00FF00",
  selection: "#515151",
  selectionMatch: "#515151",
  gutterBackground: "#555",
  gutterForeground: "#FFFFFF",
  lineHighlight: "#0a6bcb3d"
};
var abcdefInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsAbcdef, settings),
    styles: [
      {
        tag: tags.keyword,
        color: "darkgoldenrod",
        fontWeight: "bold"
      },
      {
        tag: tags.atom,
        color: "#77F"
      },
      {
        tag: tags.comment,
        color: "#7a7b7c",
        fontStyle: "italic"
      },
      {
        tag: tags.number,
        color: "violet"
      },
      {
        tag: tags.definition(tags.variableName),
        color: "#fffabc"
      },
      {
        tag: tags.variableName,
        color: "#abcdef"
      },
      {
        tag: tags.function(tags.variableName),
        color: "#fffabc"
      },
      {
        tag: tags.typeName,
        color: "#FFDD44"
      },
      {
        tag: tags.tagName,
        color: "#def"
      },
      {
        tag: tags.string,
        color: "#2b4"
      },
      {
        tag: tags.meta,
        color: "#C9F"
      },
      // { tag: t.qualifier, color: '#FFF700' },
      // { tag: t.builtin, color: '#30aabc' },
      {
        tag: tags.bracket,
        color: "#8a8a8a"
      },
      {
        tag: tags.attributeName,
        color: "#DDFF00"
      },
      {
        tag: tags.heading,
        color: "aquamarine",
        fontWeight: "bold"
      },
      {
        tag: tags.link,
        color: "blueviolet",
        fontWeight: "bold"
      },
      ...styles
    ]
  });
};
var abcdef = abcdefInit();

// node_modules/@uiw/codemirror-theme-abyss/esm/color.js
var config = {
  background: "#000c18",
  foreground: "#6688cc",
  selection: "#770811",
  selectionMatch: "#770811",
  cursor: "#ddbb88",
  dropdownBackground: "#181f2f",
  activeLine: "#0055ff30",
  matchingBracket: "#082050",
  keyword: "#225588",
  storage: "#225588",
  variable: "#2277ff",
  parameter: "#2277ff",
  function: "#9966b8",
  string: "#22aa44",
  constant: "#f280d0",
  type: "#9966b8",
  class: "#ddbb88",
  number: "#f280d0",
  comment: "#384887",
  heading: "#6688cc",
  invalid: "#A22D44",
  regexp: "#22aa44",
  tag: "#225588"
};

// node_modules/@uiw/codemirror-theme-abyss/esm/index.js
var defaultSettingsAbyss = {
  background: config.background,
  foreground: config.foreground,
  caret: config.cursor,
  selection: config.selection,
  selectionMatch: config.selectionMatch,
  gutterBackground: config.background,
  gutterForeground: config.foreground,
  lineHighlight: config.activeLine
};
var abyssInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsAbyss, settings),
    styles: [{
      tag: tags.keyword,
      color: config.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config.variable
    }, {
      tag: [tags.propertyName],
      color: config.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config.variable
    }, {
      tag: [tags.className],
      color: config.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config.number
    }, {
      tag: [tags.typeName],
      color: config.type,
      fontStyle: config.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config.comment
    }, {
      tag: tags.tagName,
      color: config.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config.variable
    }, {
      tag: tags.invalid,
      color: config.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var abyss = abyssInit();

// node_modules/@uiw/codemirror-theme-androidstudio/esm/index.js
var defaultSettingsAndroidstudio = {
  background: "#282b2e",
  foreground: "#a9b7c6",
  caret: "#00FF00",
  selection: "#4e5254",
  selectionMatch: "#4e5254",
  lineHighlight: "#7f85891f"
};
var androidstudioInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsAndroidstudio, settings),
    styles: [{
      tag: [tags.keyword, tags.deleted, tags.className],
      color: "#cc7832"
    }, {
      tag: [tags.number, tags.literal, tags.derefOperator],
      color: "#6897bb"
    }, {
      tag: [tags.link, tags.variableName],
      color: "#629755"
    }, {
      tag: [tags.comment, tags.quote],
      color: "grey"
    }, {
      tag: [tags.meta, tags.documentMeta],
      color: "#bbb529"
    }, {
      tag: [tags.string, tags.propertyName, tags.attributeValue],
      color: "#6a8759"
    }, {
      tag: [tags.heading, tags.typeName],
      color: "#ffc66d"
    }, {
      tag: [tags.attributeName],
      color: "#a9b7c6"
    }, {
      tag: [tags.emphasis],
      fontStyle: "italic"
    }, ...styles]
  });
};
var androidstudio = androidstudioInit();

// node_modules/@uiw/codemirror-theme-andromeda/esm/color.js
var config2 = {
  background: "#23262E",
  foreground: "#D5CED9",
  selection: "#db45a280",
  selectionMatch: "#db45a280",
  cursor: "#FFF",
  dropdownBackground: "#2b303b",
  dropdownBorder: "#363c49",
  activeLine: "#596a992e",
  matchingBracket: "#746f77",
  keyword: "#c74ded",
  storage: "#c74ded",
  variable: "#00e8c6",
  parameter: "#00e8c6",
  function: "#FFE66D",
  string: "#96E072",
  constant: "#ee5d43",
  type: "#FFE66D",
  class: "#FFE66D",
  number: "#ee5d43",
  comment: "#A0A1A7cc",
  heading: "#ff00aa",
  invalid: null,
  regexp: "#96E072",
  tag: "#f92672"
};

// node_modules/@uiw/codemirror-theme-andromeda/esm/index.js
var defaultSettingsAndromeda = {
  background: config2.background,
  foreground: config2.foreground,
  caret: config2.cursor,
  selection: config2.selection,
  selectionMatch: config2.selectionMatch,
  gutterBackground: config2.background,
  gutterForeground: config2.foreground,
  lineHighlight: config2.activeLine
};
var andromedaInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsAndromeda, settings),
    styles: [{
      tag: tags.keyword,
      color: config2.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config2.variable
    }, {
      tag: [tags.propertyName],
      color: config2.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config2.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config2.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config2.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config2.variable
    }, {
      tag: [tags.className],
      color: config2.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config2.number
    }, {
      tag: [tags.typeName],
      color: config2.type,
      fontStyle: config2.type
    }, {
      tag: [tags.operator],
      color: config2.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config2.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config2.comment
    }, {
      tag: tags.tagName,
      color: config2.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config2.heading
    }, {
      tag: [tags.atom, tags.special(tags.variableName)],
      color: config2.variable
    }, {
      tag: tags.invalid,
      color: config2.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: [tags.operatorKeyword, tags.bool, tags.null, tags.variableName],
      color: config2.constant
    }, ...styles]
  });
};
var andromeda = andromedaInit();

// node_modules/@uiw/codemirror-theme-atomone/esm/index.js
var defaultSettingsAtomone = {
  background: "#272C35",
  foreground: "#9d9b97",
  caret: "#797977",
  selection: "#3d4c64",
  selectionMatch: "#3d4c64",
  gutterBackground: "#272C35",
  gutterForeground: "#465063",
  gutterBorder: "transparent",
  lineHighlight: "#2e3f5940"
};
var atomoneInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsAtomone, settings),
    styles: [{
      tag: [tags.function(tags.variableName), tags.function(tags.propertyName), tags.url, tags.processingInstruction],
      color: "hsl(207, 82%, 66%)"
    }, {
      tag: [tags.tagName, tags.heading],
      color: "#e06c75"
    }, {
      tag: tags.comment,
      color: "#54636D"
    }, {
      tag: [tags.propertyName],
      color: "hsl(220, 14%, 71%)"
    }, {
      tag: [tags.attributeName, tags.number],
      color: "hsl( 29, 54%, 61%)"
    }, {
      tag: tags.className,
      color: "hsl( 39, 67%, 69%)"
    }, {
      tag: tags.keyword,
      color: "hsl(286, 60%, 67%)"
    }, {
      tag: [tags.string, tags.regexp, tags.special(tags.propertyName)],
      color: "#98c379"
    }, ...styles]
  });
};
var atomone = atomoneInit();

// node_modules/@uiw/codemirror-theme-aura/esm/index.js
var defaultSettingsAura = {
  background: "#21202e",
  foreground: "#edecee",
  caret: "#a277ff",
  selection: "#5a51898f",
  selectionMatch: "#5a51898f",
  gutterBackground: "#21202e",
  gutterForeground: "#edecee",
  gutterBorder: "transparent",
  lineHighlight: "#a394f033"
};
var auraInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsAura, settings),
    styles: [{
      tag: tags.keyword,
      color: "#a277ff"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: "#edecee"
    }, {
      tag: [tags.propertyName],
      color: "#ffca85"
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: "#61ffca"
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: "#ffca85"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#61ffca"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#edecee"
    }, {
      tag: [tags.className],
      color: "#82e2ff"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#61ffca"
    }, {
      tag: [tags.typeName],
      color: "#82e2ff"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#a277ff"
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: "#61ffca"
    }, {
      tag: [tags.meta, tags.comment],
      color: "#6d6d6d"
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#a277ff"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#edecee"
    }, {
      tag: tags.invalid,
      color: "#ff6767"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var aura = auraInit();

// node_modules/@uiw/codemirror-theme-basic/esm/dark.js
var defaultSettingsBasicDark = {
  background: "#2E3235",
  foreground: "#DDDDDD",
  caret: "#DDDDDD",
  selection: "#202325",
  selectionMatch: "#202325",
  gutterBackground: "#292d30",
  gutterForeground: "#808080",
  gutterBorder: "1px solid #ffffff10",
  lineHighlight: "#B9D2FF30"
};
var basicDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsBasicDark, settings),
    styles: [{
      tag: tags.keyword,
      color: "#fda331"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],
      color: "#b5bd68"
    }, {
      tag: [tags.variableName],
      color: "#6fb3d2"
    }, {
      tag: [tags.function(tags.variableName)],
      color: "#fda331"
    }, {
      tag: [tags.labelName],
      color: "#fc6d24"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#fda331"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#cc99cc"
    }, {
      tag: [tags.brace],
      color: "#cc99cc"
    }, {
      tag: [tags.annotation],
      color: "#fc6d24"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#fda331"
    }, {
      tag: [tags.typeName, tags.className],
      color: "#6fb3d2"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#cc99cc"
    }, {
      tag: [tags.tagName],
      color: "#fda331"
    }, {
      tag: [tags.squareBracket],
      color: "#cc99cc"
    }, {
      tag: [tags.angleBracket],
      color: "#cc99cc"
    }, {
      tag: [tags.attributeName],
      color: "#6fb3d2"
    }, {
      tag: [tags.regexp],
      color: "#fda331"
    }, {
      tag: [tags.quote],
      color: "#DDDDDD"
    }, {
      tag: [tags.string],
      color: "#b5bd68"
    }, {
      tag: tags.link,
      color: "#6987AF",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    }, {
      tag: [tags.url, tags.escape, tags.special(tags.string)],
      color: "#8abeb7"
    }, {
      tag: [tags.meta],
      color: "#A54543"
    }, {
      tag: [tags.comment],
      color: "#808080",
      fontStyle: "italic"
    }, {
      tag: tags.monospace,
      color: "#DDDDDD"
    }, {
      tag: tags.strong,
      fontWeight: "bold",
      color: "#fda331"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic",
      color: "#6fb3d2"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#DDDDDD"
    }, {
      tag: tags.special(tags.heading1),
      fontWeight: "bold",
      color: "#DDDDDD"
    }, {
      tag: tags.heading1,
      fontWeight: "bold",
      color: "#DDDDDD"
    }, {
      tag: [tags.heading2, tags.heading3, tags.heading4],
      fontWeight: "bold",
      color: "#DDDDDD"
    }, {
      tag: [tags.heading5, tags.heading6],
      color: "#DDDDDD"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#8abeb7"
    }, {
      tag: [tags.processingInstruction, tags.inserted],
      color: "#8abeb7"
    }, {
      tag: [tags.contentSeparator],
      color: "#6fb3d2"
    }, {
      tag: tags.invalid,
      color: "#B9D2FF",
      borderBottom: "1px dotted #fc6d24"
    }, ...styles]
  });
};
var basicDark = basicDarkInit();

// node_modules/@uiw/codemirror-theme-basic/esm/light.js
var defaultSettingsBasicLight = {
  background: "#ffffff",
  foreground: "#2e3440",
  caret: "#3b4252",
  selection: "#eceff4",
  selectionMatch: "#e5e9f0",
  gutterBackground: "#eceff4",
  gutterForeground: "#2e3440",
  gutterBorder: "none",
  lineHighlight: "#02255f11"
};
var basicLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsBasicLight, settings),
    styles: [{
      tag: tags.keyword,
      color: "#5e81ac"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],
      color: "#d08770"
    }, {
      tag: [tags.variableName],
      color: "#d08770"
    }, {
      tag: [tags.function(tags.variableName)],
      color: "#5e81ac"
    }, {
      tag: [tags.labelName],
      color: "#81a1c1"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#5e81ac"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#a3be8c"
    }, {
      tag: [tags.brace],
      color: "#8fbcbb"
    }, {
      tag: [tags.annotation],
      color: "#d30102"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#88c0d0"
    }, {
      tag: [tags.typeName, tags.className],
      color: "#ebcb8b"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#a3be8c"
    }, {
      tag: [tags.tagName],
      color: "#b48ead"
    }, {
      tag: [tags.squareBracket],
      color: "#bf616a"
    }, {
      tag: [tags.angleBracket],
      color: "#d08770"
    }, {
      tag: [tags.attributeName],
      color: "#ebcb8b"
    }, {
      tag: [tags.regexp],
      color: "#5e81ac"
    }, {
      tag: [tags.quote],
      color: "#3b4252"
    }, {
      tag: [tags.string],
      color: "#d08770"
    }, {
      tag: tags.link,
      color: "#8fbcbb",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    }, {
      tag: [tags.url, tags.escape, tags.special(tags.string)],
      color: "#d08770"
    }, {
      tag: [tags.meta],
      color: "#88c0d0"
    }, {
      tag: [tags.comment],
      color: "#434c5e",
      fontStyle: "italic"
    }, {
      tag: tags.strong,
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic",
      color: "#5e81ac"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: tags.special(tags.heading1),
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: tags.heading1,
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: [tags.heading2, tags.heading3, tags.heading4],
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: [tags.heading5, tags.heading6],
      color: "#5e81ac"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#d08770"
    }, {
      tag: [tags.processingInstruction, tags.inserted],
      color: "#8fbcbb"
    }, {
      tag: [tags.contentSeparator],
      color: "#ebcb8b"
    }, {
      tag: tags.invalid,
      color: "#434c5e",
      borderBottom: "1px dotted #d30102"
    }, ...styles]
  });
};
var basicLight = basicLightInit();

// node_modules/@uiw/codemirror-theme-bbedit/esm/index.js
var defaultSettingsBbedit = {
  background: "#FFFFFF",
  foreground: "#000000",
  caret: "#FBAC52",
  selection: "#FFD420",
  selectionMatch: "#FFD420",
  gutterBackground: "#f5f5f5",
  gutterForeground: "#4D4D4C",
  gutterBorder: "transparent",
  lineHighlight: "#00000012"
};
var bbeditInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsBbedit, settings),
    styles: [{
      tag: [tags.meta, tags.comment],
      color: "#804000"
    }, {
      tag: [tags.keyword, tags.strong],
      color: "#0000FF"
    }, {
      tag: [tags.number],
      color: "#FF0080"
    }, {
      tag: [tags.string],
      color: "#FF0080"
    }, {
      tag: [tags.variableName],
      color: "#006600"
    }, {
      tag: [tags.escape],
      color: "#33CC33"
    }, {
      tag: [tags.tagName],
      color: "#1C02FF"
    }, {
      tag: [tags.heading],
      color: "#0C07FF"
    }, {
      tag: [tags.quote],
      color: "#000000"
    }, {
      tag: [tags.list],
      color: "#B90690"
    }, {
      tag: [tags.documentMeta],
      color: "#888888"
    }, {
      tag: [tags.function(tags.variableName)],
      color: "#0000A2"
    }, {
      tag: [tags.definition(tags.typeName), tags.typeName],
      color: "#6D79DE"
    }, ...styles]
  });
};
var bbedit = bbeditInit();

// node_modules/@uiw/codemirror-theme-bespin/esm/index.js
var defaultSettingsBespin = {
  background: "#28211c",
  foreground: "#9d9b97",
  caret: "#797977",
  selection: "#4f382b",
  selectionMatch: "#4f382b",
  gutterBackground: "#28211c",
  gutterForeground: "#666666",
  lineHighlight: "#ffffff1a"
};
var bespinInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsBespin, settings),
    styles: [{
      tag: [tags.atom, tags.number, tags.link, tags.bool],
      color: "#9b859d"
    }, {
      tag: tags.comment,
      color: "#937121"
    }, {
      tag: [tags.keyword, tags.tagName],
      color: "#cf6a4c"
    }, {
      tag: tags.string,
      color: "#f9ee98"
    }, {
      tag: tags.bracket,
      color: "#9d9b97"
    }, {
      tag: [tags.variableName],
      color: "#5ea6ea"
    }, {
      tag: tags.definition(tags.variableName),
      color: "#cf7d34"
    }, {
      tag: [tags.function(tags.variableName), tags.className],
      color: "#cf7d34"
    }, {
      tag: [tags.propertyName, tags.attributeName],
      color: "#54be0d"
    }, ...styles]
  });
};
var bespin = bespinInit();

// node_modules/@uiw/codemirror-theme-copilot/esm/color.js
var config3 = {
  background: "#232a2f",
  foreground: "#939da5",
  selection: "#204062",
  selectionMatch: "#204062",
  cursor: "#939da5",
  dropdownBackground: "#1a2023",
  activeLine: "#4469832b",
  matchingBracket: "#204062",
  keyword: "#ba8ef7",
  storage: "#ba8ef7",
  variable: "#939da5",
  parameter: "#939da5",
  function: "#ffea6b",
  string: "#5bec95",
  constant: "#939da5",
  type: "#89ddff",
  class: "#ffea6b",
  number: "#89ddff",
  comment: "#707a84",
  heading: "#5bec95",
  invalid: "#ff6a80",
  regexp: "#56adb7",
  tag: "#ff6a80"
};

// node_modules/@uiw/codemirror-theme-copilot/esm/index.js
var defaultSettingsCopilot = {
  background: config3.background,
  foreground: config3.foreground,
  caret: config3.cursor,
  selection: config3.selection,
  selectionMatch: config3.selectionMatch,
  gutterBackground: config3.background,
  gutterForeground: config3.foreground,
  lineHighlight: config3.activeLine
};
var copilotInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsCopilot, settings),
    styles: [{
      tag: tags.keyword,
      color: config3.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config3.variable
    }, {
      tag: [tags.propertyName],
      color: config3.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config3.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config3.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config3.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config3.variable
    }, {
      tag: [tags.className],
      color: config3.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config3.number
    }, {
      tag: [tags.typeName],
      color: config3.type,
      fontStyle: config3.type
    }, {
      tag: [tags.operator],
      color: config3.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config3.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config3.comment
    }, {
      tag: tags.tagName,
      color: config3.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config3.heading
    }, {
      tag: [tags.atom, tags.special(tags.variableName)],
      color: config3.variable
    }, {
      tag: tags.invalid,
      color: config3.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: [tags.operatorKeyword, tags.bool, tags.null, tags.variableName],
      color: config3.constant
    }, ...styles]
  });
};
var copilot = copilotInit();

// node_modules/@uiw/codemirror-theme-darcula/esm/index.js
var defaultSettingsDarcula = {
  background: "#2B2B2B",
  foreground: "#f8f8f2",
  caret: "#FFFFFF",
  selection: "rgba(255, 255, 255, 0.1)",
  selectionMatch: "rgba(255, 255, 255, 0.2)",
  gutterBackground: "rgba(255, 255, 255, 0.1)",
  gutterForeground: "#999",
  gutterBorder: "transparent",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
};
var darculaInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsDarcula, settings),
    styles: [{
      tag: [tags.atom, tags.number],
      color: "#bd93f9"
    }, {
      tag: [tags.comment],
      color: "#61A151"
    }, {
      tag: [tags.string],
      color: "#6A8759"
    }, {
      tag: [tags.variableName, tags.operator],
      color: "#A9B7C6"
    }, {
      tag: [tags.meta, tags.className],
      color: "#A9B7C6"
    }, {
      tag: [tags.propertyName],
      color: "#FFC66D"
    }, {
      tag: [tags.keyword],
      color: "#CC7832"
    }, {
      tag: [tags.tagName],
      color: "#ff79c6"
    }, {
      tag: [tags.typeName],
      color: "#ffb86c"
    }, ...styles]
  });
};
var darcula = darculaInit();

// node_modules/@uiw/codemirror-theme-dracula/esm/index.js
var defaultSettingsDracula = {
  background: "#282a36",
  foreground: "#f8f8f2",
  caret: "#f8f8f0",
  selection: "rgba(255, 255, 255, 0.1)",
  selectionMatch: "rgba(255, 255, 255, 0.2)",
  gutterBackground: "#282a36",
  gutterForeground: "#6D8A88",
  gutterBorder: "transparent",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
};
var draculaInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsDracula, settings),
    styles: [{
      tag: tags.comment,
      color: "#6272a4"
    }, {
      tag: tags.string,
      color: "#f1fa8c"
    }, {
      tag: tags.atom,
      color: "#bd93f9"
    }, {
      tag: tags.meta,
      color: "#f8f8f2"
    }, {
      tag: [tags.keyword, tags.operator, tags.tagName],
      color: "#ff79c6"
    }, {
      tag: [tags.function(tags.propertyName), tags.propertyName],
      color: "#66d9ef"
    }, {
      tag: [tags.definition(tags.variableName), tags.function(tags.variableName), tags.className, tags.attributeName],
      color: "#50fa7b"
    }, {
      tag: tags.atom,
      color: "#bd93f9"
    }, ...styles]
  });
};
var dracula = draculaInit();

// node_modules/@uiw/codemirror-theme-duotone/esm/index.js
var defaultSettingsDuotoneLight = {
  background: "#faf8f5",
  foreground: "#b29762",
  caret: "#93abdc",
  selection: "#e3dcce",
  selectionMatch: "#e3dcce",
  gutterBackground: "#faf8f5",
  gutterForeground: "#cdc4b1",
  gutterBorder: "transparent",
  lineHighlight: "#ddceb154"
};
var duotoneLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsDuotoneLight, settings),
    styles: [{
      tag: [tags.comment, tags.bracket],
      color: "#b6ad9a"
    }, {
      tag: [tags.atom, tags.number, tags.keyword, tags.link, tags.attributeName, tags.quote],
      color: "#063289"
    }, {
      tag: [tags.emphasis, tags.heading, tags.tagName, tags.propertyName, tags.variableName],
      color: "#2d2006"
    }, {
      tag: [tags.typeName, tags.url, tags.string],
      color: "#896724"
    }, {
      tag: [tags.operator, tags.string],
      color: "#1659df"
    }, {
      tag: [tags.propertyName],
      color: "#b29762"
    }, {
      tag: [tags.unit, tags.punctuation],
      color: "#063289"
    }, ...styles]
  });
};
var duotoneLight = duotoneLightInit();
var defaultSettingsDuotoneDark = {
  background: "#2a2734",
  foreground: "#6c6783",
  caret: "#ffad5c",
  selection: "#91ff6c26",
  selectionMatch: "#91ff6c26",
  gutterBackground: "#2a2734",
  gutterForeground: "#545167",
  lineHighlight: "#36334280"
};
var duotoneDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsDuotoneDark, settings),
    styles: [{
      tag: [tags.comment, tags.bracket],
      color: "#6c6783"
    }, {
      tag: [tags.atom, tags.number, tags.keyword, tags.link, tags.attributeName, tags.quote],
      color: "#ffcc99"
    }, {
      tag: [tags.emphasis, tags.heading, tags.tagName, tags.propertyName, tags.className, tags.variableName],
      color: "#eeebff"
    }, {
      tag: [tags.typeName, tags.url],
      color: "#7a63ee"
    }, {
      tag: tags.operator,
      color: "#ffad5c"
    }, {
      tag: tags.string,
      color: "#ffb870"
    }, {
      tag: [tags.propertyName],
      color: "#9a86fd"
    }, {
      tag: [tags.unit, tags.punctuation],
      color: "#e09142"
    }, ...styles]
  });
};
var duotoneDark = duotoneDarkInit();

// node_modules/@uiw/codemirror-theme-eclipse/esm/index.js
var defaultSettingsEclipse = {
  background: "#fff",
  foreground: "#000",
  caret: "#FFFFFF",
  selection: "#d7d4f0",
  selectionMatch: "#d7d4f0",
  gutterBackground: "#f7f7f7",
  gutterForeground: "#999",
  lineHighlight: "#006fff1c",
  gutterBorder: "transparent"
};
var eclipseInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsEclipse, settings),
    styles: [{
      tag: [tags.comment],
      color: "#3F7F5F"
    }, {
      tag: [tags.documentMeta],
      color: "#FF1717"
    }, {
      tag: tags.keyword,
      color: "#7F0055",
      fontWeight: "bold"
    }, {
      tag: tags.atom,
      color: "#00f"
    }, {
      tag: tags.number,
      color: "#164"
    }, {
      tag: tags.propertyName,
      color: "#164"
    }, {
      tag: [tags.variableName, tags.definition(tags.variableName)],
      color: "#0000C0"
    }, {
      tag: tags.function(tags.variableName),
      color: "#0000C0"
    }, {
      tag: tags.string,
      color: "#2A00FF"
    }, {
      tag: tags.operator,
      color: "black"
    }, {
      tag: tags.tagName,
      color: "#170"
    }, {
      tag: tags.attributeName,
      color: "#00c"
    }, {
      tag: tags.link,
      color: "#219"
    }, ...styles]
  });
};
var eclipse = eclipseInit();

// node_modules/@uiw/codemirror-theme-github/esm/index.js
var defaultSettingsGithubLight = {
  background: "#fff",
  foreground: "#24292e",
  selection: "#BBDFFF",
  selectionMatch: "#BBDFFF",
  gutterBackground: "#fff",
  gutterForeground: "#6e7781"
};
var githubLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsGithubLight, settings),
    styles: [{
      tag: [tags.standard(tags.tagName), tags.tagName],
      color: "#116329"
    }, {
      tag: [tags.comment, tags.bracket],
      color: "#6a737d"
    }, {
      tag: [tags.className, tags.propertyName],
      color: "#6f42c1"
    }, {
      tag: [tags.variableName, tags.attributeName, tags.number, tags.operator],
      color: "#005cc5"
    }, {
      tag: [tags.keyword, tags.typeName, tags.typeOperator, tags.typeName],
      color: "#d73a49"
    }, {
      tag: [tags.string, tags.meta, tags.regexp],
      color: "#032f62"
    }, {
      tag: [tags.name, tags.quote],
      color: "#22863a"
    }, {
      tag: [tags.heading, tags.strong],
      color: "#24292e",
      fontWeight: "bold"
    }, {
      tag: [tags.emphasis],
      color: "#24292e",
      fontStyle: "italic"
    }, {
      tag: [tags.deleted],
      color: "#b31d28",
      backgroundColor: "ffeef0"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#e36209"
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: "#032f62"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.invalid,
      color: "#cb2431"
    }, ...styles]
  });
};
var githubLight = githubLightInit();
var defaultSettingsGithubDark = {
  background: "#0d1117",
  foreground: "#c9d1d9",
  caret: "#c9d1d9",
  selection: "#003d73",
  selectionMatch: "#003d73",
  lineHighlight: "#36334280"
};
var githubDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsGithubDark, settings),
    styles: [{
      tag: [tags.standard(tags.tagName), tags.tagName],
      color: "#7ee787"
    }, {
      tag: [tags.comment, tags.bracket],
      color: "#8b949e"
    }, {
      tag: [tags.className, tags.propertyName],
      color: "#d2a8ff"
    }, {
      tag: [tags.variableName, tags.attributeName, tags.number, tags.operator],
      color: "#79c0ff"
    }, {
      tag: [tags.keyword, tags.typeName, tags.typeOperator, tags.typeName],
      color: "#ff7b72"
    }, {
      tag: [tags.string, tags.meta, tags.regexp],
      color: "#a5d6ff"
    }, {
      tag: [tags.name, tags.quote],
      color: "#7ee787"
    }, {
      tag: [tags.heading, tags.strong],
      color: "#d2a8ff",
      fontWeight: "bold"
    }, {
      tag: [tags.emphasis],
      color: "#d2a8ff",
      fontStyle: "italic"
    }, {
      tag: [tags.deleted],
      color: "#ffdcd7",
      backgroundColor: "ffeef0"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#ffab70"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.invalid,
      color: "#f97583"
    }, ...styles]
  });
};
var githubDark = githubDarkInit();

// node_modules/@uiw/codemirror-theme-gruvbox-dark/esm/index.js
var defaultSettingsGruvboxDark = {
  background: "#282828",
  foreground: "#ebdbb2",
  caret: "#ebdbb2",
  selection: "#b99d555c",
  selectionMatch: "#b99d555c",
  lineHighlight: "#baa1602b",
  gutterBackground: "#282828",
  gutterForeground: "#7c6f64"
};
var gruvboxDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsGruvboxDark, settings),
    styles: [{
      tag: tags.keyword,
      color: "#fb4934"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],
      color: "#8ec07c"
    }, {
      tag: [tags.variableName],
      color: "#83a598"
    }, {
      tag: [tags.function(tags.variableName)],
      color: "#b8bb26",
      fontStyle: "bold"
    }, {
      tag: [tags.labelName],
      color: "#ebdbb2"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#d3869b"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#ebdbb2"
    }, {
      tag: [tags.brace],
      color: "#ebdbb2"
    }, {
      tag: [tags.annotation],
      color: "#fb4934d"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#d3869b"
    }, {
      tag: [tags.typeName, tags.className],
      color: "#fabd2f"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#fb4934"
    }, {
      tag: [tags.tagName],
      color: "#8ec07c",
      fontStyle: "bold"
    }, {
      tag: [tags.squareBracket],
      color: "#fe8019"
    }, {
      tag: [tags.angleBracket],
      color: "#83a598"
    }, {
      tag: [tags.attributeName],
      color: "#8ec07c"
    }, {
      tag: [tags.regexp],
      color: "#8ec07c"
    }, {
      tag: [tags.quote],
      color: "#928374"
    }, {
      tag: [tags.string],
      color: "#ebdbb2"
    }, {
      tag: tags.link,
      color: "#a89984",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    }, {
      tag: [tags.url, tags.escape, tags.special(tags.string)],
      color: "#d3869b"
    }, {
      tag: [tags.meta],
      color: "#fabd2f"
    }, {
      tag: [tags.comment],
      color: "#928374",
      fontStyle: "italic"
    }, {
      tag: tags.strong,
      fontWeight: "bold",
      color: "#fe8019"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic",
      color: "#b8bb26"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#b8bb26"
    }, {
      tag: [tags.heading1, tags.heading2],
      fontWeight: "bold",
      color: "#b8bb26"
    }, {
      tag: [tags.heading3, tags.heading4],
      fontWeight: "bold",
      color: "#fabd2f"
    }, {
      tag: [tags.heading5, tags.heading6],
      color: "#fabd2f"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#d3869b"
    }, {
      tag: [tags.processingInstruction, tags.inserted],
      color: "#83a598"
    }, {
      tag: [tags.contentSeparator],
      color: "#fb4934"
    }, {
      tag: tags.invalid,
      color: "#fe8019",
      borderBottom: "1px dotted #fb4934d"
    }, ...styles]
  });
};
var gruvboxDark = gruvboxDarkInit();
var defaultSettingsGruvboxLight = {
  background: "#fbf1c7",
  foreground: "#3c3836",
  caret: "#af3a03",
  selection: "#bdae9391",
  selectionMatch: "#bdae9391",
  lineHighlight: "#a37f2238",
  gutterBackground: "#ebdbb2",
  gutterForeground: "#665c54",
  gutterBorder: "transparent"
};
var gruvboxLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsGruvboxLight, settings),
    styles: [{
      tag: tags.keyword,
      color: "#9d0006"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],
      color: "#427b58"
    }, {
      tag: [tags.variableName],
      color: "#076678"
    }, {
      tag: [tags.function(tags.variableName)],
      color: "#79740e",
      fontStyle: "bold"
    }, {
      tag: [tags.labelName],
      color: "#3c3836"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#8f3f71"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#3c3836"
    }, {
      tag: [tags.brace],
      color: "#3c3836"
    }, {
      tag: [tags.annotation],
      color: "#9d0006"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#8f3f71"
    }, {
      tag: [tags.typeName, tags.className],
      color: "#b57614"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#9d0006"
    }, {
      tag: [tags.tagName],
      color: "#427b58",
      fontStyle: "bold"
    }, {
      tag: [tags.squareBracket],
      color: "#af3a03"
    }, {
      tag: [tags.angleBracket],
      color: "#076678"
    }, {
      tag: [tags.attributeName],
      color: "#427b58"
    }, {
      tag: [tags.regexp],
      color: "#427b58"
    }, {
      tag: [tags.quote],
      color: "#928374"
    }, {
      tag: [tags.string],
      color: "#3c3836"
    }, {
      tag: tags.link,
      color: "#7c6f64",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    }, {
      tag: [tags.url, tags.escape, tags.special(tags.string)],
      color: "#8f3f71"
    }, {
      tag: [tags.meta],
      color: "#b57614"
    }, {
      tag: [tags.comment],
      color: "#928374",
      fontStyle: "italic"
    }, {
      tag: tags.strong,
      fontWeight: "bold",
      color: "#af3a03"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic",
      color: "#79740e"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#79740e"
    }, {
      tag: [tags.heading1, tags.heading2],
      fontWeight: "bold",
      color: "#79740e"
    }, {
      tag: [tags.heading3, tags.heading4],
      fontWeight: "bold",
      color: "#b57614"
    }, {
      tag: [tags.heading5, tags.heading6],
      color: "#b57614"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#8f3f71"
    }, {
      tag: [tags.processingInstruction, tags.inserted],
      color: "#076678"
    }, {
      tag: [tags.contentSeparator],
      color: "#9d0006"
    }, {
      tag: tags.invalid,
      color: "#af3a03",
      borderBottom: "1px dotted #9d0006"
    }, ...styles]
  });
};
var gruvboxLight = gruvboxLightInit();

// node_modules/@uiw/codemirror-theme-kimbie/esm/color.js
var config4 = {
  background: "#221a0f",
  foreground: "#d3af86",
  selection: "#84613daa",
  selectionMatch: "#84613daa",
  cursor: "#d3af86",
  dropdownBackground: "#51412c",
  activeLine: "#5e452b52",
  matchingBracket: "#5e452b",
  keyword: "#98676a",
  storage: "#98676a",
  variable: "#dc3958",
  parameter: "#dc3958",
  function: "#7e602c",
  string: "#889b4a",
  constant: "#f79a32",
  type: "#f06431",
  class: "#f06431",
  number: "#f79a32",
  comment: "#a57a4c",
  heading: "#8ab1b0",
  invalid: "#dc3958",
  regexp: "#7e602c",
  tag: "#dc3958"
};

// node_modules/@uiw/codemirror-theme-kimbie/esm/index.js
var defaultSettingsKimbie = {
  background: config4.background,
  foreground: config4.foreground,
  caret: config4.cursor,
  selection: config4.selection,
  selectionMatch: config4.selection,
  gutterBackground: config4.background,
  gutterForeground: config4.foreground,
  lineHighlight: config4.activeLine
};
var kimbieInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsKimbie, settings),
    styles: [{
      tag: tags.keyword,
      color: config4.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config4.variable
    }, {
      tag: [tags.propertyName],
      color: config4.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config4.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config4.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config4.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config4.variable
    }, {
      tag: [tags.className],
      color: config4.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config4.number
    }, {
      tag: [tags.typeName],
      color: config4.type,
      fontStyle: config4.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config4.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config4.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config4.comment
    }, {
      tag: tags.tagName,
      color: config4.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config4.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config4.variable
    }, {
      tag: tags.invalid,
      color: config4.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var kimbie = kimbieInit();

// node_modules/@uiw/codemirror-theme-material/esm/index.js
var defaultSettingsMaterial = {
  background: "#2e3235",
  foreground: "#bdbdbd",
  caret: "#a0a4ae",
  selection: "#d7d4f063",
  selectionMatch: "#d7d4f063",
  gutterBackground: "#2e3235",
  gutterForeground: "#999",
  gutterActiveForeground: "#4f5b66",
  lineHighlight: "#545b6130"
};
var defaultSettingsMaterialDark = defaultSettingsMaterial;
var materialInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsMaterial, settings),
    styles: [{
      tag: tags.keyword,
      color: "#cf6edf"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: "#56c8d8"
    }, {
      tag: [tags.propertyName],
      color: "#facf4e"
    }, {
      tag: [tags.variableName],
      color: "#bdbdbd"
    }, {
      tag: [tags.function(tags.variableName)],
      color: "#56c8d8"
    }, {
      tag: [tags.labelName],
      color: "#cf6edf"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#facf4e"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#fa5788"
    }, {
      tag: [tags.brace],
      color: "#cf6edf"
    }, {
      tag: [tags.annotation],
      color: "#ff5f52"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#ffad42"
    }, {
      tag: [tags.typeName, tags.className],
      color: "#ffad42"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#7186f0"
    }, {
      tag: [tags.tagName],
      color: "#99d066"
    }, {
      tag: [tags.squareBracket],
      color: "#ff5f52"
    }, {
      tag: [tags.angleBracket],
      color: "#606f7a"
    }, {
      tag: [tags.attributeName],
      color: "#bdbdbd"
    }, {
      tag: [tags.regexp],
      color: "#ff5f52"
    }, {
      tag: [tags.quote],
      color: "#6abf69"
    }, {
      tag: [tags.string],
      color: "#99d066"
    }, {
      tag: tags.link,
      color: "#56c8d8",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    }, {
      tag: [tags.url, tags.escape, tags.special(tags.string)],
      color: "#facf4e"
    }, {
      tag: [tags.meta],
      color: "#707d8b"
    }, {
      tag: [tags.comment],
      color: "#707d8b",
      fontStyle: "italic"
    }, {
      tag: tags.monospace,
      color: "#bdbdbd"
    }, {
      tag: tags.strong,
      fontWeight: "bold",
      color: "#ff5f52"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic",
      color: "#99d066"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#facf4e"
    }, {
      tag: tags.heading1,
      fontWeight: "bold",
      color: "#facf4e"
    }, {
      tag: [tags.heading2, tags.heading3, tags.heading4],
      fontWeight: "bold",
      color: "#facf4e"
    }, {
      tag: [tags.heading5, tags.heading6],
      color: "#facf4e"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#56c8d8"
    }, {
      tag: [tags.processingInstruction, tags.inserted],
      color: "#ff5f52"
    }, {
      tag: [tags.contentSeparator],
      color: "#56c8d8"
    }, {
      tag: tags.invalid,
      color: "#606f7a",
      borderBottom: "1px dotted #ff5f52"
    }, ...styles]
  });
};
var materialDarkInit = materialInit;
var materialDark = materialInit();
var material = materialInit();
var defaultSettingsMaterialLight = {
  background: "#FAFAFA",
  foreground: "#90A4AE",
  caret: "#272727",
  selection: "#80CBC440",
  selectionMatch: "#80CBC440",
  gutterBackground: "#FAFAFA",
  gutterForeground: "#90A4AE",
  gutterBorder: "transparent",
  lineHighlight: "#CCD7DA50"
};
var materialLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsMaterialLight, settings),
    styles: [{
      tag: tags.keyword,
      color: "#39ADB5"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: "#90A4AE"
    }, {
      tag: [tags.propertyName],
      color: "#6182B8"
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: "#91B859"
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: "#6182B8"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#39ADB5"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#90A4AE"
    }, {
      tag: [tags.className],
      color: "#E2931D"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#F76D47"
    }, {
      tag: [tags.typeName],
      color: "#E2931D",
      fontStyle: "#E2931D"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#39ADB5"
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: "#91B859"
    }, {
      tag: [tags.meta, tags.comment],
      color: "#90A4AE"
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#39ADB5"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#90A4AE"
    }, {
      tag: tags.invalid,
      color: "#E5393570"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var materialLight = materialLightInit();

// node_modules/@uiw/codemirror-theme-monokai/esm/color.js
var config5 = {
  background: "#272822",
  foreground: "#f8f8f2",
  selection: "#4a4a76",
  selectionMatch: "#4a4a76",
  cursor: "#f8f8f0",
  dropdownBackground: "#414339",
  activeLine: "#3e3d3257",
  matchingBracket: "#3e3d32",
  keyword: "#F92672",
  storage: "#F92672",
  variable: "#FD971F",
  parameter: "#FD971F",
  function: "#66D9EF",
  string: "#E6DB74",
  constant: "#AE81FF",
  type: "#66D9EF",
  class: "#A6E22E",
  number: "#AE81FF",
  comment: "#88846f",
  heading: "#A6E22E",
  invalid: "#F44747",
  regexp: "#E6DB74",
  tag: "#F92672"
};

// node_modules/@uiw/codemirror-theme-monokai/esm/index.js
var defaultSettingsMonokai = {
  background: config5.background,
  foreground: config5.foreground,
  caret: config5.cursor,
  selection: config5.selection,
  selectionMatch: config5.selection,
  gutterBackground: config5.background,
  gutterForeground: config5.foreground,
  lineHighlight: config5.activeLine
};
var monokaiInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsMonokai, settings),
    styles: [{
      tag: tags.keyword,
      color: config5.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config5.variable
    }, {
      tag: [tags.propertyName],
      color: config5.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config5.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config5.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config5.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config5.variable
    }, {
      tag: [tags.className],
      color: config5.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config5.number
    }, {
      tag: [tags.typeName],
      color: config5.type,
      fontStyle: config5.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config5.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config5.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config5.comment
    }, {
      tag: tags.tagName,
      color: config5.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config5.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config5.variable
    }, {
      tag: tags.invalid,
      color: config5.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var monokai = monokaiInit();

// node_modules/@uiw/codemirror-theme-monokai-dimmed/esm/color.js
var config6 = {
  background: "#1e1e1e",
  foreground: "#c5c8c6",
  selection: "#4747a1",
  selectionMatch: "#4747a1",
  cursor: "#c07020",
  dropdownBackground: "#525252",
  activeLine: "#30303078",
  matchingBracket: "#303030",
  keyword: "#676867",
  storage: "#676867",
  variable: "#c7444a",
  parameter: "#6089B4",
  function: "#9872A2",
  string: "#D08442",
  constant: "#8080FF",
  type: "#9B0000",
  class: "#CE6700",
  number: "#6089B4",
  comment: "#9A9B99",
  heading: "#D0B344",
  invalid: "#FF0B00",
  regexp: "#D08442",
  tag: "#6089B4"
};

// node_modules/@uiw/codemirror-theme-monokai-dimmed/esm/index.js
var defaultSettingsMonokaiDimmed = {
  background: config6.background,
  foreground: config6.foreground,
  caret: config6.cursor,
  selection: config6.selection,
  selectionMatch: config6.selection,
  gutterBackground: config6.background,
  gutterForeground: config6.foreground,
  lineHighlight: config6.activeLine
};
var monokaiDimmedInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsMonokaiDimmed, settings),
    styles: [{
      tag: tags.keyword,
      color: config6.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config6.variable
    }, {
      tag: [tags.propertyName],
      color: config6.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config6.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config6.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config6.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config6.variable
    }, {
      tag: [tags.className],
      color: config6.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config6.number
    }, {
      tag: [tags.typeName],
      color: config6.type,
      fontStyle: config6.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config6.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config6.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config6.comment
    }, {
      tag: tags.tagName,
      color: config6.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config6.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config6.variable
    }, {
      tag: tags.invalid,
      color: config6.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var monokaiDimmed = monokaiDimmedInit();

// node_modules/@uiw/codemirror-theme-noctis-lilac/esm/index.js
var defaultSettingsNoctisLilac = {
  background: "#f2f1f8",
  foreground: "#0c006b",
  caret: "#5c49e9",
  selection: "#d5d1f2",
  selectionMatch: "#d5d1f2",
  gutterBackground: "#f2f1f8",
  gutterForeground: "#0c006b70",
  lineHighlight: "#16067911"
};
var noctisLilacInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsNoctisLilac, settings),
    styles: [{
      tag: tags.comment,
      color: "#9995b7"
    }, {
      tag: tags.keyword,
      color: "#ff5792",
      fontWeight: "bold"
    }, {
      tag: [tags.definitionKeyword, tags.modifier],
      color: "#ff5792"
    }, {
      tag: [tags.className, tags.tagName, tags.definition(tags.typeName)],
      color: "#0094f0"
    }, {
      tag: [tags.number, tags.bool, tags.null, tags.special(tags.brace)],
      color: "#5842ff"
    }, {
      tag: [tags.definition(tags.propertyName), tags.function(tags.variableName)],
      color: "#0095a8"
    }, {
      tag: tags.typeName,
      color: "#b3694d"
    }, {
      tag: [tags.propertyName, tags.variableName],
      color: "#fa8900"
    }, {
      tag: tags.operator,
      color: "#ff5792"
    }, {
      tag: tags.self,
      color: "#e64100"
    }, {
      tag: [tags.string, tags.regexp],
      color: "#00b368"
    }, {
      tag: [tags.paren, tags.bracket],
      color: "#0431fa"
    }, {
      tag: tags.labelName,
      color: "#00bdd6"
    }, {
      tag: tags.attributeName,
      color: "#e64100"
    }, {
      tag: tags.angleBracket,
      color: "#9995b7"
    }, ...styles]
  });
};
var noctisLilac = noctisLilacInit();

// node_modules/@uiw/codemirror-theme-nord/esm/index.js
var defaultSettingsNord = {
  background: "#2e3440",
  foreground: "#FFFFFF",
  caret: "#FFFFFF",
  selection: "#4b556a",
  selectionMatch: "#4b556a",
  gutterBackground: "#2e3440",
  gutterForeground: "#4c566a",
  gutterActiveForeground: "#d8dee9",
  lineHighlight: "#4c566a29"
};
var nordInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsNord, settings),
    styles: [{
      tag: tags.keyword,
      color: "#5e81ac"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],
      color: "#88c0d0"
    }, {
      tag: [tags.variableName],
      color: "#8fbcbb"
    }, {
      tag: [tags.function(tags.variableName)],
      color: "#8fbcbb"
    }, {
      tag: [tags.labelName],
      color: "#81a1c1"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#5e81ac"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#a3be8c"
    }, {
      tag: [tags.brace],
      color: "#8fbcbb"
    }, {
      tag: [tags.annotation],
      color: "#d30102"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#b48ead"
    }, {
      tag: [tags.typeName, tags.className],
      color: "#ebcb8b"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#a3be8c"
    }, {
      tag: [tags.tagName],
      color: "#b48ead"
    }, {
      tag: [tags.squareBracket],
      color: "#bf616a"
    }, {
      tag: [tags.angleBracket],
      color: "#d08770"
    }, {
      tag: [tags.attributeName],
      color: "#ebcb8b"
    }, {
      tag: [tags.regexp],
      color: "#5e81ac"
    }, {
      tag: [tags.quote],
      color: "#b48ead"
    }, {
      tag: [tags.string],
      color: "#a3be8c"
    }, {
      tag: tags.link,
      color: "#a3be8c",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    }, {
      tag: [tags.url, tags.escape, tags.special(tags.string)],
      color: "#8fbcbb"
    }, {
      tag: [tags.meta],
      color: "#88c0d0"
    }, {
      tag: [tags.monospace],
      color: "#d8dee9",
      fontStyle: "italic"
    }, {
      tag: [tags.comment],
      color: "#4c566a",
      fontStyle: "italic"
    }, {
      tag: tags.strong,
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic",
      color: "#5e81ac"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: tags.special(tags.heading1),
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: tags.heading1,
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: [tags.heading2, tags.heading3, tags.heading4],
      fontWeight: "bold",
      color: "#5e81ac"
    }, {
      tag: [tags.heading5, tags.heading6],
      color: "#5e81ac"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#d08770"
    }, {
      tag: [tags.processingInstruction, tags.inserted],
      color: "#8fbcbb"
    }, {
      tag: [tags.contentSeparator],
      color: "#ebcb8b"
    }, {
      tag: tags.invalid,
      color: "#434c5e",
      borderBottom: "1px dotted #d30102"
    }, ...styles]
  });
};
var nord = nordInit();

// node_modules/@uiw/codemirror-theme-okaidia/esm/index.js
var defaultSettingsOkaidia = {
  background: "#272822",
  foreground: "#FFFFFF",
  caret: "#FFFFFF",
  selection: "#49483E",
  selectionMatch: "#49483E",
  gutterBackground: "#272822",
  gutterForeground: "#FFFFFF70",
  lineHighlight: "#0000003b"
};
var okaidiaInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsOkaidia, settings),
    styles: [
      {
        tag: [tags.comment, tags.documentMeta],
        color: "#8292a2"
      },
      {
        tag: [tags.number, tags.bool, tags.null, tags.atom],
        color: "#ae81ff"
      },
      {
        tag: [tags.attributeValue, tags.className, tags.name],
        color: "#e6db74"
      },
      {
        tag: [tags.propertyName, tags.attributeName],
        color: "#a6e22e"
      },
      {
        tag: [tags.variableName],
        color: "#9effff"
      },
      {
        tag: [tags.squareBracket],
        color: "#bababa"
      },
      {
        tag: [tags.string, tags.special(tags.brace)],
        color: "#e6db74"
      },
      {
        tag: [tags.regexp, tags.className, tags.typeName, tags.definition(tags.typeName)],
        color: "#66d9ef"
      },
      {
        tag: [tags.definition(tags.variableName), tags.definition(tags.propertyName), tags.function(tags.variableName)],
        color: "#fd971f"
      },
      // { tag: t.keyword, color: '#f92672' },
      {
        tag: [tags.keyword, tags.definitionKeyword, tags.modifier, tags.tagName, tags.angleBracket],
        color: "#f92672"
      },
      ...styles
    ]
  });
};
var okaidia = okaidiaInit();

// node_modules/@uiw/codemirror-theme-quietlight/esm/color.js
var config7 = {
  background: "#F5F5F5",
  foreground: "#333333",
  selection: "#C9D0D9",
  selectionMatch: "#C9D0D9",
  cursor: "#54494B",
  dropdownBackground: "#F5F5F5",
  activeLine: "#79ff002b",
  matchingBracket: "#E4F6D4",
  keyword: "#4B69C6",
  storage: "#4B69C6",
  variable: "#7A3E9D",
  parameter: "#7A3E9D",
  function: "#AA3731",
  string: "#448C27",
  constant: "#9C5D27",
  type: "#7A3E9D",
  class: "#AA3731",
  number: "#9C5D27",
  comment: "#AAAAAA",
  heading: "#AA3731",
  invalid: "#cd3131",
  regexp: "#4B69C6",
  tag: "#4B69C6"
};

// node_modules/@uiw/codemirror-theme-quietlight/esm/index.js
var defaultSettingsQuietlight = {
  background: config7.background,
  foreground: config7.foreground,
  caret: config7.cursor,
  selection: config7.selection,
  selectionMatch: config7.selection,
  gutterBackground: config7.background,
  gutterForeground: config7.foreground,
  gutterBorder: "transparent",
  lineHighlight: config7.activeLine
};
var quietlightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsQuietlight, settings),
    styles: [{
      tag: tags.keyword,
      color: config7.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config7.variable
    }, {
      tag: [tags.propertyName],
      color: config7.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config7.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config7.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config7.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config7.variable
    }, {
      tag: [tags.className],
      color: config7.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config7.number
    }, {
      tag: [tags.typeName],
      color: config7.type,
      fontStyle: config7.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config7.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config7.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config7.comment
    }, {
      tag: tags.tagName,
      color: config7.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config7.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config7.variable
    }, {
      tag: tags.invalid,
      color: config7.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var quietlight = quietlightInit();

// node_modules/@uiw/codemirror-theme-red/esm/color.js
var config8 = {
  background: "#390000",
  foreground: "#F8F8F8",
  selection: "#750000",
  selectionMatch: "#750000",
  cursor: "#970000",
  dropdownBackground: "#580000",
  activeLine: "#ff000033",
  matchingBracket: "#ff000033",
  keyword: "#f12727ff",
  storage: "#ff6262ff",
  variable: "#edef7dff",
  parameter: "#edef7dff",
  function: "#ffb454ff",
  string: "#edef7dff",
  constant: "#ec0d1e",
  type: "#9df39fff",
  class: "#fec758ff",
  number: "#994646ff",
  comment: "#e7c0c0ff",
  heading: "#fec758ff",
  invalid: "#ffffffff",
  regexp: "#edef7dff",
  tag: "#aa5507ff"
};

// node_modules/@uiw/codemirror-theme-red/esm/index.js
var defaultSettingsRed = {
  background: config8.background,
  foreground: config8.foreground,
  caret: config8.cursor,
  selection: config8.selection,
  selectionMatch: config8.selection,
  gutterBackground: config8.background,
  gutterForeground: config8.foreground,
  lineHighlight: config8.activeLine
};
var redInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsRed, settings),
    styles: [{
      tag: tags.keyword,
      color: config8.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config8.variable
    }, {
      tag: [tags.propertyName],
      color: config8.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config8.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config8.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config8.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config8.variable
    }, {
      tag: [tags.className],
      color: config8.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config8.number
    }, {
      tag: [tags.typeName],
      color: config8.type,
      fontStyle: config8.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config8.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config8.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config8.comment
    }, {
      tag: tags.tagName,
      color: config8.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config8.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config8.variable
    }, {
      tag: tags.invalid,
      color: config8.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var red = redInit();

// node_modules/@uiw/codemirror-theme-solarized/esm/dark-color.js
var config9 = {
  background: "#002B36",
  foreground: "#839496",
  selection: "#004454AA",
  selectionMatch: "#005A6FAA",
  cursor: "#D30102",
  dropdownBackground: "#00212B",
  dropdownBorder: "#2AA19899",
  activeLine: "#00cafe11",
  matchingBracket: "#073642",
  keyword: "#859900",
  storage: "#93A1A1",
  variable: "#268BD2",
  parameter: "#268BD2",
  function: "#268BD2",
  string: "#2AA198",
  constant: "#CB4B16",
  type: "#859900",
  class: "#268BD2",
  number: "#D33682",
  comment: "#586E75",
  heading: "#268BD2",
  invalid: "#DC322F",
  regexp: "#DC322F",
  tag: "#268BD2"
};

// node_modules/@uiw/codemirror-theme-solarized/esm/dark.js
var defaultSettingsSolarizedDark = {
  background: config9.background,
  foreground: config9.foreground,
  caret: config9.cursor,
  selection: config9.selection,
  selectionMatch: config9.selection,
  gutterBackground: config9.background,
  gutterForeground: config9.foreground,
  gutterBorder: "transparent",
  lineHighlight: config9.activeLine
};
var solarizedDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsSolarizedDark, settings),
    styles: [{
      tag: tags.keyword,
      color: config9.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config9.variable
    }, {
      tag: [tags.propertyName],
      color: config9.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config9.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config9.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config9.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config9.variable
    }, {
      tag: [tags.className],
      color: config9.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config9.number
    }, {
      tag: [tags.typeName],
      color: config9.type,
      fontStyle: config9.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config9.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config9.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config9.comment
    }, {
      tag: tags.tagName,
      color: config9.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config9.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config9.variable
    }, {
      tag: tags.invalid,
      color: config9.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var solarizedDark = solarizedDarkInit();

// node_modules/@uiw/codemirror-theme-solarized/esm/light-color.js
var config10 = {
  background: "#FDF6E3",
  foreground: "#657B83",
  selection: "#EEE8D5",
  selectionMatch: "#EEE8D5",
  cursor: "#657B83",
  dropdownBackground: "#EEE8D5",
  dropdownBorder: "#D3AF86",
  activeLine: "#3d392d11",
  matchingBracket: "#EEE8D5",
  keyword: "#859900",
  storage: "#586E75",
  variable: "#268BD2",
  parameter: "#268BD2",
  function: "#268BD2",
  string: "#2AA198",
  constant: "#CB4B16",
  type: "#859900",
  class: "#268BD2",
  number: "#D33682",
  comment: "#93A1A1",
  heading: "#268BD2",
  invalid: "#DC322F",
  regexp: "#DC322F",
  tag: "#268BD2"
};

// node_modules/@uiw/codemirror-theme-solarized/esm/light.js
var defaultSettingsSolarizedLight = {
  background: config10.background,
  foreground: config10.foreground,
  caret: config10.cursor,
  selection: config10.selection,
  selectionMatch: config10.selectionMatch,
  gutterBackground: config10.background,
  gutterForeground: config10.foreground,
  gutterBorder: "transparent",
  lineHighlight: config10.activeLine
};
var solarizedLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsSolarizedLight, settings),
    styles: [{
      tag: tags.keyword,
      color: config10.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config10.variable
    }, {
      tag: [tags.propertyName],
      color: config10.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config10.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config10.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config10.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config10.variable
    }, {
      tag: [tags.className],
      color: config10.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config10.number
    }, {
      tag: [tags.typeName],
      color: config10.type,
      fontStyle: config10.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config10.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config10.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config10.comment
    }, {
      tag: tags.tagName,
      color: config10.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config10.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config10.variable
    }, {
      tag: tags.invalid,
      color: config10.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var solarizedLight = solarizedLightInit();

// node_modules/@uiw/codemirror-theme-sublime/esm/index.js
var defaultSettingsSublime = {
  background: "#303841",
  foreground: "#FFFFFF",
  caret: "#FBAC52",
  selection: "#4C5964",
  selectionMatch: "#3A546E",
  gutterBackground: "#303841",
  gutterForeground: "#FFFFFF70",
  lineHighlight: "#00000059"
};
function sublimeInit(options) {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsSublime, settings),
    styles: [
      {
        tag: [tags.meta, tags.comment],
        color: "#A2A9B5"
      },
      {
        tag: [tags.attributeName, tags.keyword],
        color: "#B78FBA"
      },
      {
        tag: tags.function(tags.variableName),
        color: "#5AB0B0"
      },
      {
        tag: [tags.string, tags.regexp, tags.attributeValue],
        color: "#99C592"
      },
      {
        tag: tags.operator,
        color: "#f47954"
      },
      // { tag: t.moduleKeyword, color: 'red' },
      {
        tag: [tags.tagName, tags.modifier],
        color: "#E35F63"
      },
      {
        tag: [tags.number, tags.definition(tags.tagName), tags.className, tags.definition(tags.variableName)],
        color: "#fbac52"
      },
      {
        tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
        color: "#E35F63"
      },
      {
        tag: tags.variableName,
        color: "#539ac4"
      },
      {
        tag: [tags.propertyName, tags.typeName],
        color: "#629ccd"
      },
      {
        tag: tags.propertyName,
        color: "#36b7b5"
      },
      ...styles
    ]
  });
}
var sublime = sublimeInit();

// node_modules/@uiw/codemirror-theme-tokyo-night/esm/index.js
var defaultSettingsTokyoNight = {
  background: "#1a1b26",
  foreground: "#787c99",
  caret: "#c0caf5",
  selection: "#515c7e40",
  selectionMatch: "#16161e",
  gutterBackground: "#1a1b26",
  gutterForeground: "#787c99",
  gutterBorder: "transparent",
  lineHighlight: "#474b6611"
};
var tokyoNightInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsTokyoNight, settings),
    styles: [{
      tag: tags.keyword,
      color: "#bb9af7"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: "#c0caf5"
    }, {
      tag: [tags.propertyName],
      color: "#7aa2f7"
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: "#9ece6a"
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: "#7aa2f7"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#bb9af7"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#c0caf5"
    }, {
      tag: [tags.className],
      color: "#c0caf5"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#ff9e64"
    }, {
      tag: [tags.typeName],
      color: "#0db9d7"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#bb9af7"
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: "#b4f9f8"
    }, {
      tag: [tags.meta, tags.comment],
      color: "#444b6a"
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#89ddff"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#c0caf5"
    }, {
      tag: tags.invalid,
      color: "#ff5370"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var tokyoNight = tokyoNightInit();

// node_modules/@uiw/codemirror-theme-tokyo-night-storm/esm/index.js
var defaultSettingsTokyoNightStorm = {
  background: "#24283b",
  foreground: "#7982a9",
  caret: "#c0caf5",
  selection: "#6f7bb630",
  selectionMatch: "#343b5f",
  gutterBackground: "#24283b",
  gutterForeground: "#7982a9",
  gutterBorder: "transparent",
  lineHighlight: "#292e427a"
};
var tokyoNightStormInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsTokyoNightStorm, settings),
    styles: [{
      tag: tags.keyword,
      color: "#bb9af7"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: "#c0caf5"
    }, {
      tag: [tags.propertyName],
      color: "#7aa2f7"
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: "#9ece6a"
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: "#7aa2f7"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#bb9af7"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#c0caf5"
    }, {
      tag: [tags.className],
      color: "#c0caf5"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#ff9e64"
    }, {
      tag: [tags.typeName],
      color: "#2ac3de",
      fontStyle: "#2ac3de"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#bb9af7"
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: "#b4f9f8"
    }, {
      tag: [tags.meta, tags.comment],
      color: "#565f89"
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#89ddff"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#c0caf5"
    }, {
      tag: tags.invalid,
      color: "#ff5370"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var tokyoNightStorm = tokyoNightStormInit();

// node_modules/@uiw/codemirror-theme-tokyo-night-day/esm/index.js
var defaultSettingsTokyoNightDay = {
  background: "#e1e2e7",
  foreground: "#3760bf",
  caret: "#3760bf",
  selection: "#99a7df",
  selectionMatch: "#99a7df",
  gutterBackground: "#e1e2e7",
  gutterForeground: "#3760bf",
  gutterBorder: "transparent",
  lineHighlight: "#5f5faf11"
};
var tokyoNightDayInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsTokyoNightDay, settings),
    styles: [{
      tag: tags.keyword,
      color: "#007197"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: "#3760bf"
    }, {
      tag: [tags.propertyName],
      color: "#3760bf"
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: "#587539"
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: "#3760bf"
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: "#3760bf"
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: "#3760bf"
    }, {
      tag: [tags.className],
      color: "#3760bf"
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: "#b15c00"
    }, {
      tag: [tags.typeName],
      color: "#007197",
      fontStyle: "#007197"
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: "#007197"
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: "#587539"
    }, {
      tag: [tags.meta, tags.comment],
      color: "#848cb5"
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#b15c00"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#3760bf"
    }, {
      tag: tags.invalid,
      color: "#f52a65"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var tokyoNightDay = tokyoNightDayInit();

// node_modules/@uiw/codemirror-theme-tomorrow-night-blue/esm/color.js
var config11 = {
  background: "#002451",
  foreground: "#ffffff",
  selection: "#003f8e",
  selectionMatch: "#003f8e",
  cursor: "#ffffff",
  dropdownBackground: "#001733",
  activeLine: "#00346e7a",
  matchingBracket: "#00346e",
  keyword: "#EBBBFF",
  storage: "#EBBBFF",
  variable: "#FFC58F",
  parameter: "#FFC58F",
  function: "#BBDAFF",
  string: "#D1F1A9",
  constant: "#FFC58F",
  type: "#FFEEAD",
  class: "#BBDAFF",
  number: "#FFC58F",
  comment: "#7285B7",
  heading: "#D1F1A9",
  invalid: "#a92049",
  regexp: "#D1F1A9",
  tag: "#FF9DA4"
};

// node_modules/@uiw/codemirror-theme-tomorrow-night-blue/esm/index.js
var defaultSettingsTomorrowNightBlue = {
  background: config11.background,
  foreground: config11.foreground,
  caret: config11.cursor,
  selection: config11.selection,
  selectionMatch: config11.selection,
  gutterBackground: config11.background,
  gutterForeground: config11.foreground,
  lineHighlight: config11.activeLine
};
var tomorrowNightBlueInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsTomorrowNightBlue, settings),
    styles: [{
      tag: tags.keyword,
      color: config11.keyword
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config11.variable
    }, {
      tag: [tags.propertyName],
      color: config11.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config11.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config11.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config11.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config11.variable
    }, {
      tag: [tags.className],
      color: config11.class
    }, {
      tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
      color: config11.number
    }, {
      tag: [tags.typeName],
      color: config11.type,
      fontStyle: config11.type
    }, {
      tag: [tags.operator, tags.operatorKeyword],
      color: config11.keyword
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config11.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config11.comment
    }, {
      tag: tags.tagName,
      color: config11.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config11.heading
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: config11.variable
    }, {
      tag: tags.invalid,
      color: config11.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, ...styles]
  });
};
var tomorrowNightBlue = tomorrowNightBlueInit();

// node_modules/@uiw/codemirror-theme-vscode/esm/index.js
var defaultSettingsVscodeDark = {
  background: "#1e1e1e",
  foreground: "#9cdcfe",
  caret: "#c6c6c6",
  selection: "#6199ff2f",
  selectionMatch: "#72a1ff59",
  lineHighlight: "#ffffff0f",
  gutterBackground: "#1e1e1e",
  gutterForeground: "#838383",
  gutterActiveForeground: "#fff",
  fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
};
function vscodeDarkInit(options) {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsVscodeDark, settings),
    styles: [{
      tag: [tags.keyword, tags.operatorKeyword, tags.modifier, tags.color, tags.constant(tags.name), tags.standard(tags.name), tags.standard(tags.tagName), tags.special(tags.brace), tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#569cd6"
    }, {
      tag: [tags.controlKeyword, tags.moduleKeyword],
      color: "#c586c0"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName, tags.propertyName, tags.variableName, tags.labelName, tags.definition(tags.name)],
      color: "#9cdcfe"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: "#9cdcfe"
    }, {
      tag: [tags.typeName, tags.className, tags.tagName, tags.number, tags.changed, tags.annotation, tags.self, tags.namespace],
      color: "#4ec9b0"
    }, {
      tag: [tags.function(tags.variableName), tags.function(tags.propertyName)],
      color: "#dcdcaa"
    }, {
      tag: [tags.number],
      color: "#b5cea8"
    }, {
      tag: [tags.operator, tags.punctuation, tags.separator, tags.url, tags.escape, tags.regexp],
      color: "#d4d4d4"
    }, {
      tag: [tags.regexp],
      color: "#d16969"
    }, {
      tag: [tags.special(tags.string), tags.processingInstruction, tags.string, tags.inserted],
      color: "#ce9178"
    }, {
      tag: [tags.angleBracket],
      color: "#808080"
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: [tags.meta, tags.comment],
      color: "#6a9955"
    }, {
      tag: tags.link,
      color: "#6a9955",
      textDecoration: "underline"
    }, {
      tag: tags.invalid,
      color: "#ff0000"
    }, ...styles]
  });
}
var vscodeDark = vscodeDarkInit();

// node_modules/@uiw/codemirror-theme-white/esm/dark-color.js
var config12 = {
  background: "#000",
  foreground: "#fff",
  selection: "#7d46fc3f",
  selectionMatch: "#7d46fc7f",
  cursor: "#7d46fc",
  dropdownBackground: "#0a0b0f",
  dropdownBorder: "#1e1d27",
  activeLine: "#00346eb0",
  matchingBracket: "#7d46fc7f",
  keyword: null,
  storage: null,
  variable: null,
  parameter: null,
  function: null,
  string: "#a8a8b1",
  constant: null,
  type: null,
  class: null,
  number: null,
  comment: "#2e2e37",
  heading: null,
  invalid: null,
  regexp: "#a8a8b1",
  tag: null
};

// node_modules/@uiw/codemirror-theme-white/esm/dark.js
var defaultSettingsWhiteDark = {
  background: config12.background,
  foreground: config12.foreground,
  caret: config12.cursor,
  selection: config12.selection,
  selectionMatch: config12.selectionMatch,
  gutterBackground: config12.background,
  gutterForeground: config12.foreground,
  lineHighlight: config12.activeLine
};
var whiteDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsWhiteDark, settings),
    styles: [{
      tag: tags.keyword,
      color: config12.keyword,
      fontWeight: "bold"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config12.variable
    }, {
      tag: [tags.propertyName],
      color: config12.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config12.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config12.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config12.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config12.variable
    }, {
      tag: [tags.className],
      color: config12.class
    }, {
      tag: [tags.typeName],
      color: config12.type,
      fontStyle: config12.type
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config12.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config12.comment
    }, {
      tag: tags.tagName,
      color: config12.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config12.heading
    }, {
      tag: [tags.atom, tags.special(tags.variableName)],
      color: config12.variable
    }, {
      tag: tags.invalid,
      color: config12.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: [tags.operatorKeyword, tags.bool, tags.null, tags.variableName],
      color: config12.constant
    }, {
      tag: [tags.operator],
      color: "#bb9af7"
    }, {
      tag: [tags.number],
      color: "#a8a8b1"
    }, {
      tag: [tags.bracket],
      color: "#bb9af7"
    }, ...styles]
  });
};
var whiteDark = whiteDarkInit();

// node_modules/@uiw/codemirror-theme-white/esm/light-color.js
var config13 = {
  background: "#fff",
  foreground: "#000",
  selection: "#0064ff26",
  selectionMatch: "#0064ff4c",
  cursor: "#004bff",
  dropdownBackground: "#f4f6fc",
  dropdownBorder: "#e7ecf2",
  activeLine: "#0064ff0c",
  matchingBracket: "#0064ff4c",
  keyword: null,
  storage: null,
  variable: null,
  parameter: null,
  function: null,
  string: "#6b7a88",
  constant: null,
  type: null,
  class: null,
  number: null,
  comment: "#bec9d3",
  heading: null,
  invalid: null,
  regexp: "#6b7a88",
  tag: null
};

// node_modules/@uiw/codemirror-theme-white/esm/light.js
var defaultSettingsWhiteLight = {
  background: config13.background,
  foreground: config13.foreground,
  caret: config13.cursor,
  selection: config13.selection,
  selectionMatch: config13.selectionMatch,
  gutterBackground: config13.background,
  gutterForeground: config13.foreground,
  lineHighlight: config13.activeLine
};
var whiteLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsWhiteLight, settings),
    styles: [{
      tag: tags.keyword,
      color: config13.keyword,
      fontWeight: "bold"
    }, {
      tag: [tags.name, tags.deleted, tags.character, tags.macroName],
      color: config13.variable
    }, {
      tag: [tags.propertyName],
      color: config13.function
    }, {
      tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)],
      color: config13.string
    }, {
      tag: [tags.function(tags.variableName), tags.labelName],
      color: config13.function
    }, {
      tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
      color: config13.constant
    }, {
      tag: [tags.definition(tags.name), tags.separator],
      color: config13.variable
    }, {
      tag: [tags.className],
      color: config13.class
    }, {
      tag: [tags.typeName],
      color: config13.type,
      fontStyle: config13.type
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: config13.regexp
    }, {
      tag: [tags.meta, tags.comment],
      color: config13.comment
    }, {
      tag: tags.tagName,
      color: config13.tag
    }, {
      tag: tags.strong,
      fontWeight: "bold"
    }, {
      tag: tags.emphasis,
      fontStyle: "italic"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.heading,
      fontWeight: "bold",
      color: config13.heading
    }, {
      tag: [tags.atom, tags.special(tags.variableName)],
      color: config13.variable
    }, {
      tag: tags.invalid,
      color: config13.invalid
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: [tags.operatorKeyword, tags.bool, tags.null, tags.variableName],
      color: config13.constant
    }, {
      tag: [tags.operator],
      color: "#0431fa"
    }, {
      tag: [tags.number],
      color: "#a8a8b1"
    }, {
      tag: [tags.bracket],
      color: "#0431fa"
    }, ...styles]
  });
};
var whiteLight = whiteLightInit();

// node_modules/@uiw/codemirror-theme-xcode/esm/index.js
var defaultSettingsXcodeLight = {
  background: "#fff",
  foreground: "#3D3D3D",
  selection: "#BBDFFF",
  selectionMatch: "#BBDFFF",
  gutterBackground: "#fff",
  gutterForeground: "#AFAFAF",
  lineHighlight: "#d5e6ff69"
};
function xcodeLightInit(options) {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsXcodeLight, settings),
    styles: [{
      tag: [tags.comment, tags.quote],
      color: "#707F8D"
    }, {
      tag: [tags.typeName, tags.typeOperator],
      color: "#aa0d91"
    }, {
      tag: [tags.keyword],
      color: "#aa0d91",
      fontWeight: "bold"
    }, {
      tag: [tags.string, tags.meta],
      color: "#D23423"
    }, {
      tag: [tags.name],
      color: "#032f62"
    }, {
      tag: [tags.typeName],
      color: "#522BB2"
    }, {
      tag: [tags.variableName],
      color: "#23575C"
    }, {
      tag: [tags.definition(tags.variableName)],
      color: "#327A9E"
    }, {
      tag: [tags.regexp, tags.link],
      color: "#0e0eff"
    }, ...styles]
  });
}
var xcodeLight = xcodeLightInit();
var defaultSettingsXcodeDark = {
  background: "#292A30",
  foreground: "#CECFD0",
  caret: "#fff",
  selection: "#727377",
  selectionMatch: "#727377",
  lineHighlight: "#ffffff0f"
};
var xcodeDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsXcodeDark, settings),
    styles: [{
      tag: [tags.comment, tags.quote],
      color: "#7F8C98"
    }, {
      tag: [tags.keyword],
      color: "#FF7AB2",
      fontWeight: "bold"
    }, {
      tag: [tags.string, tags.meta],
      color: "#FF8170"
    }, {
      tag: [tags.typeName],
      color: "#DABAFF"
    }, {
      tag: [tags.definition(tags.variableName)],
      color: "#6BDFFF"
    }, {
      tag: [tags.name],
      color: "#6BAA9F"
    }, {
      tag: [tags.variableName],
      color: "#ACF2E4"
    }, {
      tag: [tags.regexp, tags.link],
      color: "#FF8170"
    }, ...styles]
  });
};
var xcodeDark = xcodeDarkInit();
export {
  abcdef,
  abcdefInit,
  abyss,
  abyssInit,
  androidstudio,
  androidstudioInit,
  andromeda,
  andromedaInit,
  atomone,
  atomoneInit,
  aura,
  auraInit,
  basicDark,
  basicDarkInit,
  basicLight,
  basicLightInit,
  bbedit,
  bbeditInit,
  bespin,
  bespinInit,
  copilot,
  copilotInit,
  darcula,
  darculaInit,
  defaultSettingsAbcdef,
  defaultSettingsAbyss,
  defaultSettingsAndroidstudio,
  defaultSettingsAndromeda,
  defaultSettingsAtomone,
  defaultSettingsAura,
  defaultSettingsBasicDark,
  defaultSettingsBasicLight,
  defaultSettingsBbedit,
  defaultSettingsBespin,
  defaultSettingsCopilot,
  defaultSettingsDarcula,
  defaultSettingsDracula,
  defaultSettingsDuotoneDark,
  defaultSettingsDuotoneLight,
  defaultSettingsEclipse,
  defaultSettingsGithubDark,
  defaultSettingsGithubLight,
  defaultSettingsGruvboxDark,
  defaultSettingsGruvboxLight,
  defaultSettingsKimbie,
  defaultSettingsMaterial,
  defaultSettingsMaterialDark,
  defaultSettingsMaterialLight,
  defaultSettingsMonokai,
  defaultSettingsMonokaiDimmed,
  defaultSettingsNoctisLilac,
  defaultSettingsNord,
  defaultSettingsOkaidia,
  defaultSettingsQuietlight,
  defaultSettingsRed,
  defaultSettingsSolarizedDark,
  defaultSettingsSolarizedLight,
  defaultSettingsSublime,
  defaultSettingsTokyoNight,
  defaultSettingsTokyoNightDay,
  defaultSettingsTokyoNightStorm,
  defaultSettingsTomorrowNightBlue,
  defaultSettingsVscodeDark,
  defaultSettingsWhiteDark,
  defaultSettingsWhiteLight,
  defaultSettingsXcodeDark,
  defaultSettingsXcodeLight,
  dracula,
  draculaInit,
  duotoneDark,
  duotoneDarkInit,
  duotoneLight,
  duotoneLightInit,
  eclipse,
  eclipseInit,
  githubDark,
  githubDarkInit,
  githubLight,
  githubLightInit,
  gruvboxDark,
  gruvboxDarkInit,
  gruvboxLight,
  gruvboxLightInit,
  kimbie,
  kimbieInit,
  material,
  materialDark,
  materialDarkInit,
  materialInit,
  materialLight,
  materialLightInit,
  monokai,
  monokaiDimmed,
  monokaiDimmedInit,
  monokaiInit,
  noctisLilac,
  noctisLilacInit,
  nord,
  nordInit,
  okaidia,
  okaidiaInit,
  quietlight,
  quietlightInit,
  red,
  redInit,
  solarizedDark,
  solarizedDarkInit,
  solarizedLight,
  solarizedLightInit,
  sublime,
  sublimeInit,
  tokyoNight,
  tokyoNightDay,
  tokyoNightDayInit,
  tokyoNightInit,
  tokyoNightStorm,
  tokyoNightStormInit,
  tomorrowNightBlue,
  tomorrowNightBlueInit,
  vscodeDark,
  vscodeDarkInit,
  whiteDark,
  whiteDarkInit,
  whiteLight,
  whiteLightInit,
  xcodeDark,
  xcodeDarkInit,
  xcodeLight,
  xcodeLightInit
};
//# sourceMappingURL=@uiw_codemirror-themes-all.js.map
