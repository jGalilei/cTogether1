{
  "version": 3,
  "sources": ["../../colors-named/src/index.ts", "../../colors-named-hex/src/index.ts", "../../hsl-matcher/src/index.ts", "../../@uiw/codemirror-extensions-color/esm/utils.js", "../../@uiw/codemirror-extensions-color/esm/index.js"],
  "sourcesContent": ["/**\n * A array with color names. Based on https://www.w3.org/TR/css-color-4/#named-colors\n */\nconst names = [\n  'aliceblue',\n  'antiquewhite',\n  'aqua',\n  'aquamarine',\n  'azure',\n  'beige',\n  'bisque',\n  'black',\n  'blanchedalmond',\n  'blue',\n  'blueviolet',\n  'brown',\n  'burlywood',\n  'cadetblue',\n  'chartreuse',\n  'chocolate',\n  'coral',\n  'cornflowerblue',\n  'cornsilk',\n  'crimson',\n  'cyan',\n  'darkblue',\n  'darkcyan',\n  'darkgoldenrod',\n  'darkgray',\n  'darkgreen',\n  'darkgrey',\n  'darkkhaki',\n  'darkmagenta',\n  'darkolivegreen',\n  'darkorange',\n  'darkorchid',\n  'darkred',\n  'darksalmon',\n  'darkseagreen',\n  'darkslateblue',\n  'darkslategray',\n  'darkslategrey',\n  'darkturquoise',\n  'darkviolet',\n  'deeppink',\n  'deepskyblue',\n  'dimgray',\n  'dimgrey',\n  'dodgerblue',\n  'firebrick',\n  'floralwhite',\n  'forestgreen',\n  'fuchsia',\n  'gainsboro',\n  'ghostwhite',\n  'gold',\n  'goldenrod',\n  'gray',\n  'green',\n  'greenyellow',\n  'grey',\n  'honeydew',\n  'hotpink',\n  'indianred',\n  'indigo',\n  'ivory',\n  'khaki',\n  'lavender',\n  'lavenderblush',\n  'lawngreen',\n  'lemonchiffon',\n  'lightblue',\n  'lightcoral',\n  'lightcyan',\n  'lightgoldenrodyellow',\n  'lightgray',\n  'lightgreen',\n  'lightgrey',\n  'lightpink',\n  'lightsalmon',\n  'lightseagreen',\n  'lightskyblue',\n  'lightslategray',\n  'lightslategrey',\n  'lightsteelblue',\n  'lightyellow',\n  'lime',\n  'limegreen',\n  'linen',\n  'magenta',\n  'maroon',\n  'mediumaquamarine',\n  'mediumblue',\n  'mediumorchid',\n  'mediumpurple',\n  'mediumseagreen',\n  'mediumslateblue',\n  'mediumspringgreen',\n  'mediumturquoise',\n  'mediumvioletred',\n  'midnightblue',\n  'mintcream',\n  'mistyrose',\n  'moccasin',\n  'navajowhite',\n  'navy',\n  'oldlace',\n  'olive',\n  'olivedrab',\n  'orange',\n  'orangered',\n  'orchid',\n  'palegoldenrod',\n  'palegreen',\n  'paleturquoise',\n  'palevioletred',\n  'papayawhip',\n  'peachpuff',\n  'peru',\n  'pink',\n  'plum',\n  'powderblue',\n  'purple',\n  'rebeccapurple',\n  'red',\n  'rosybrown',\n  'royalblue',\n  'saddlebrown',\n  'salmon',\n  'sandybrown',\n  'seagreen',\n  'seashell',\n  'sienna',\n  'silver',\n  'skyblue',\n  'slateblue',\n  'slategray',\n  'slategrey',\n  'snow',\n  'springgreen',\n  'steelblue',\n  'tan',\n  'teal',\n  'thistle',\n  'tomato',\n  'turquoise',\n  'violet',\n  'wheat',\n  'white',\n  'whitesmoke',\n  'yellow',\n  'yellowgreen',\n] as const;\n\nexport default names;\n", "/**\n * A array with color names. Based on https://www.w3.org/TR/css-color-4/#named-colors\n */\nconst hexs = [\n  '#F0F8FF',\n  '#FAEBD7',\n  '#00FFFF',\n  '#7FFFD4',\n  '#F0FFFF',\n  '#F5F5DC',\n  '#FFE4C4',\n  '#000000',\n  '#FFEBCD',\n  '#0000FF',\n  '#8A2BE2',\n  '#A52A2A',\n  '#DEB887',\n  '#5F9EA0',\n  '#7FFF00',\n  '#D2691E',\n  '#FF7F50',\n  '#6495ED',\n  '#FFF8DC',\n  '#DC143C',\n  '#00FFFF',\n  '#00008B',\n  '#008B8B',\n  '#B8860B',\n  '#A9A9A9',\n  '#006400',\n  '#A9A9A9',\n  '#BDB76B',\n  '#8B008B',\n  '#556B2F',\n  '#FF8C00',\n  '#9932CC',\n  '#8B0000',\n  '#E9967A',\n  '#8FBC8F',\n  '#483D8B',\n  '#2F4F4F',\n  '#2F4F4F',\n  '#00CED1',\n  '#9400D3',\n  '#FF1493',\n  '#00BFFF',\n  '#696969',\n  '#696969',\n  '#1E90FF',\n  '#B22222',\n  '#FFFAF0',\n  '#228B22',\n  '#FF00FF',\n  '#DCDCDC',\n  '#F8F8FF',\n  '#FFD700',\n  '#DAA520',\n  '#808080',\n  '#008000',\n  '#ADFF2F',\n  '#808080',\n  '#F0FFF0',\n  '#FF69B4',\n  '#CD5C5C',\n  '#4B0082',\n  '#FFFFF0',\n  '#F0E68C',\n  '#E6E6FA',\n  '#FFF0F5',\n  '#7CFC00',\n  '#FFFACD',\n  '#ADD8E6',\n  '#F08080',\n  '#E0FFFF',\n  '#FAFAD2',\n  '#D3D3D3',\n  '#90EE90',\n  '#D3D3D3',\n  '#FFB6C1',\n  '#FFA07A',\n  '#20B2AA',\n  '#87CEFA',\n  '#778899',\n  '#778899',\n  '#B0C4DE',\n  '#FFFFE0',\n  '#00FF00',\n  '#32CD32',\n  '#FAF0E6',\n  '#FF00FF',\n  '#800000',\n  '#66CDAA',\n  '#0000CD',\n  '#BA55D3',\n  '#9370DB',\n  '#3CB371',\n  '#7B68EE',\n  '#00FA9A',\n  '#48D1CC',\n  '#C71585',\n  '#191970',\n  '#F5FFFA',\n  '#FFE4E1',\n  '#FFE4B5',\n  '#FFDEAD',\n  '#000080',\n  '#FDF5E6',\n  '#808000',\n  '#6B8E23',\n  '#FFA500',\n  '#FF4500',\n  '#DA70D6',\n  '#EEE8AA',\n  '#98FB98',\n  '#AFEEEE',\n  '#DB7093',\n  '#FFEFD5',\n  '#FFDAB9',\n  '#CD853F',\n  '#FFC0CB',\n  '#DDA0DD',\n  '#B0E0E6',\n  '#800080',\n  '#663399',\n  '#FF0000',\n  '#BC8F8F',\n  '#4169E1',\n  '#8B4513',\n  '#FA8072',\n  '#F4A460',\n  '#2E8B57',\n  '#FFF5EE',\n  '#A0522D',\n  '#C0C0C0',\n  '#87CEEB',\n  '#6A5ACD',\n  '#708090',\n  '#708090',\n  '#FFFAFA',\n  '#00FF7F',\n  '#4682B4',\n  '#D2B48C',\n  '#008080',\n  '#D8BFD8',\n  '#FF6347',\n  '#40E0D0',\n  '#EE82EE',\n  '#F5DEB3',\n  '#FFFFFF',\n  '#F5F5F5',\n  '#FFFF00',\n  '#9ACD32',\n] as const;\n\nexport default hexs;\n", "const MATCHER =\n  /hsla?\\(\\s*(\\+?-?\\d*\\.?\\d*(?:e\\+)?(?:\\d*)?(?:deg|rad|grad|turn)?)\\s*,\\s*(\\+?\\-?\\d*\\.?\\d*(?:e\\+)?(?:\\d*)?%)\\s*,\\s*(\\+?\\-?\\d*\\.?\\d*(?:e\\+)?(?:\\d*)?%)\\s*(,\\s*\\+?\\-?\\s*(?:\\d*\\.?\\d*(?:E-\\d*)?%?)?)?\\s*\\)/i;\nconst MATCHER_SPACE =\n  /hsla?\\(\\s*(\\+?-?\\d*\\.?\\d*(?:e\\+)?(?:\\d*)?(?:deg|rad|grad|turn)?)\\s*(\\+?\\-?\\d*\\.?\\d*(?:e\\+)?(?:\\d*)?%)\\s*(\\+?\\-?\\d*\\.?\\d*(?:e\\+)?(?:\\d*)?%)\\s*(\\/\\s*\\+?\\-?\\s*(?:\\d*\\.?\\d*(?:E-\\d*)?%?)?)?\\s*\\)/i;\n\nconst aStr = (a?: string) => (a ? a.replace(/^(,|\\/)\\s*/, '').trim() : a);\n\nexport interface RGBColor {\n  r: number;\n  g: number;\n  b: number;\n}\n\nexport interface RGBAColor extends RGBColor {\n  a: number;\n}\n\nexport interface HSLObjectStringColor {\n  h: string;\n  s: string;\n  l: string;\n}\n\nexport interface HSLAObjectStringColor extends HSLObjectStringColor {\n  a?: string;\n}\n\n/** Convert HLS string to HLS object or verify whether hls is valid */\nexport default function hslMatcher(hsl: string = ''): HSLAObjectStringColor | undefined {\n  const match = MATCHER.exec(hsl) || MATCHER_SPACE.exec(hsl);\n  if (!!match) {\n    const [_, h, s, l, a] = match;\n    if (a && /^(:?(\\/|,)\\s*-?\\+?)$/.test(a.trim())) return;\n    return {\n      h,\n      s,\n      l,\n      a: aStr(a),\n    };\n  }\n}\n\n/**\n * Convert HSL String to RGB\n *\n * ```js\n * hsl(240, 100%, 50%)                         // ✅ comma separated\n * hsl(240, 100%, 50%, 0.1)                    // ✅ comma separated with opacity\n * hsl(240, 100%, 50%, 10%)                    // ✅ comma separated with % opacity\n * hsl(240, 100%, 50%, 10x)                    // ❌\n * hsl(240,100%,50%,0.1)                       // ✅ comma separated without spaces\n * hsl(180deg, 100%, 50%, 0.1)                 // ✅ hue with 'deg'\n * hsl(3.14rad, 100%, 50%, 0.1)                // ✅ hue with 'rad'\n * hsl(200grad, 100%, 50%, 0.1)                // ✅ hue with 'grad'\n * hsl(0.5turn, 100%, 50%, 0.1)                // ✅ hue with 'turn'\n * hsl(-240, -100%, -50%, -0.1)                // ✅ negative values\n * hsl(+240, +100%, +50%, +0.1)                // ✅ explicit positive sign\n * hsl(240.5, 99.99%, 49.999%, 0.9999)         // ✅ non-integer values\n * hsl(.9, .99%, .999%, .9999)                 // ✅ fraction w/o leading zero\n * hsl(.9, .99%, .999%, )                      // ❌\n * hsl(0240, 0100%, 0050%, 01)                 // ✅ leading zeros\n * hsl(240.0, 100.00%, 50.000%, 1.0000)        // ✅ trailing decimal zeros\n * hsl(2400, 1000%, 1000%, 10)                 // ✅ out of range values\n * hsl(-2400.01deg, -1000.5%, -1000.05%, -100) // ✅ combination of above\n * hsl(2.40e+2, 1.00e+2%, 5.00e+1%, 1E-3)      // ✅ scientific notation\n * hsl(240 100% 50%)                           // ✅ space separated (CSS Color Level 4)\n * hsl(240 100% 50% / 0.1)                     // ✅ space separated with opacity\n * hsla(240, 100%, 50%)                        // ✅ hsla() alias\n * hsla(240, 100%, 50%, 0.1)                   // ✅ hsla() with opacity\n * HSL(240Deg, 100%, 50%)                      // ✅ case insensitive\n * ```\n *\n * @param string\n * @returns <RGBColor | RGBAColor | undefined>\n *\n * https://www.30secondsofcode.org/js/s/hsl-to-rgb\n */\nexport function hlsStringToRGB(hls: string): RGBColor | RGBAColor | undefined {\n  const obj = hslMatcher(hls);\n  if (!obj) return;\n  const { h: hueStr, s: sStr, l: lStr, a: alphaStr } = obj;\n  let h = 0,\n    s = 0,\n    l = 0;\n\n  if (/\\s*\\d*turn\\s*$/.test(hueStr)) {\n    h = Number(hueStr.replace(/turn\\s*$/i, '')) * 360;\n  } else if (/\\s*\\d*grad\\s*$/.test(hueStr)) {\n    h = gradsToDegrees(hueStr.replace(/grad\\s*$/i, ''));\n  } else if (/\\s*\\d*rad\\s*$/.test(hueStr)) {\n    h = radiansToDegrees(Number(hueStr.replace(/rad\\s*$/i, '')));\n  }\n\n  if (/^((-|\\+)?\\d*|(-|\\+)?\\d*?.\\d*(e\\+)?\\d*?)$/.test(hueStr.replace(/deg$/i, ''))) {\n    h = Number(hueStr.replace(/deg$/i, ''));\n  }\n  if (h > 360) h = 360;\n  if (h < 0) h = 0;\n  if (/^((-|\\+)?\\d*|(-|\\+)?\\d*?.\\d*(e\\+)?\\d*?)%$/.test(sStr)) {\n    s = Number(sStr.replace(/%$/, ''));\n  }\n  if (s > 100) s = 100;\n  if (s < 0) s = 0;\n  if (/^((-|\\+)?\\d*|(-|\\+)?\\d*?.\\d*(e\\+)?\\d*?)%$/.test(lStr)) {\n    l = Number(lStr.replace(/%$/, ''));\n  }\n  if (l > 100) l = 100;\n  if (l < 0) l = 0;\n\n  s /= 100;\n  l /= 100;\n  const k = (n: number) => (n + h / 30) % 12;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n: number) => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n\n  // rounding\n  const toFixed = (n: number) => Number(n.toFixed());\n\n  /**\n   * https://drafts.csswg.org/css-color/#typedef-alpha-value\n   * Opacity in CSS is typically represented using the <alpha-value> syntax,\n   * for example in the opacity property or as the alpha component in a color function.\n   * Represented as a <number>, the useful range of the value is 0 (representing full transparency) to 1 (representing full opacity).\n   * It can also be written as a <percentage>, which computes to the equivalent <number> (0% to 0, 100% to 1).\n   * Unless otherwise specified, an <alpha-value> component defaults to 100% when omitted.\n   * Values outside the range [0,1] are not invalid, but are clamped to that range when computed.\n   */\n  if (alphaStr && /^\\+?-?\\d*(E-\\d*|.\\d*%?)?$/.test(alphaStr)) {\n    const alpha = /%/g.test(alphaStr) ? Number(alphaStr.replace(/%/g, '')) / 100 : Number(alphaStr);\n    return { r: toFixed(255 * f(0)), g: toFixed(255 * f(8)), b: toFixed(255 * f(4)), a: alpha };\n  }\n  return { r: toFixed(255 * f(0)), g: toFixed(255 * f(8)), b: toFixed(255 * f(4)) };\n}\n\n/** Convert `grad` to `deg` */\nexport function gradsToDegrees(input: string | number) {\n  let grads = Number(input);\n\n  grads = grads % 400;\n  if (grads < 0) {\n    grads += 400;\n  }\n  // or grads = grads < 0 ? 400 + grads : grads;\n  let degrees = (grads / 400) * 360; // or let degrees = grads*0.9\n  return degrees;\n}\n\n/** Convert `rad` to `deg` */\nexport function radiansToDegrees(radians: number) {\n  return Number((radians * (180 / Math.PI)).toFixed());\n}\n", "export function toFullHex(color) {\n  if (color.length === 4) {\n    // 3-char hex\n    return [\"#\" + color[1].repeat(2) + color[2].repeat(2) + color[3].repeat(2), ''];\n  }\n  if (color.length === 5) {\n    // 4-char hex (alpha)\n    return [\"#\" + color[1].repeat(2) + color[2].repeat(2) + color[3].repeat(2), color[4].repeat(2)];\n  }\n  if (color.length === 9) {\n    // 8-char hex (alpha)\n    return [\"#\" + color.slice(1, -2), color.slice(-2)];\n  }\n  return [color, ''];\n}\n/** https://stackoverflow.com/a/5624139/1334703 */\nexport function rgbToHex(r, g, b) {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\n/** https://stackoverflow.com/a/5624139/1334703 */\nexport function hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n/** https://css-tricks.com/converting-color-spaces-in-javascript/#aa-rgb-to-hsl */\nexport function RGBToHSL(r, g, b) {\n  r /= 255, g /= 255, b /= 255;\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h = 0,\n    s,\n    l = (max + min) / 2;\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: Math.floor(h * 360),\n    s: Math.floor(s * 100),\n    l: Math.floor(l * 100)\n  };\n}", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"color\", \"colorRaw\"];\nimport { ViewPlugin, EditorView, WidgetType, Decoration } from '@codemirror/view';\nimport { syntaxTree } from '@codemirror/language';\nimport colors from 'colors-named';\nimport hexs from 'colors-named-hex';\nimport hslMatcher, { hlsStringToRGB } from 'hsl-matcher';\nimport { toFullHex, rgbToHex, hexToRgb, RGBToHSL } from './utils';\nexport var ColorType = /*#__PURE__*/function (ColorType) {\n  ColorType[\"rgb\"] = \"RGB\";\n  ColorType[\"hex\"] = \"HEX\";\n  ColorType[\"named\"] = \"NAMED\";\n  ColorType[\"hsl\"] = \"HSL\";\n  return ColorType;\n}({});\nvar colorState = new WeakMap();\nfunction colorDecorations(view) {\n  var widgets = [];\n  for (var range of view.visibleRanges) {\n    syntaxTree(view.state).iterate({\n      from: range.from,\n      to: range.to,\n      enter: _ref => {\n        var {\n          type,\n          from,\n          to\n        } = _ref;\n        var callExp = view.state.doc.sliceString(from, to);\n        /**\n         * ```\n         * rgb(0 107   128, .5);         ❌ ❌ ❌\n         * rgb( 0 107   128 );           ✅ ✅ ✅\n         * RGB( 0 107   128 );           ✅ ✅ ✅\n         * Rgb( 0 107   128 );           ✅ ✅ ✅\n         * rgb( 0 107 128 / );           ❌ ❌ ❌\n         * rgb( 0 107 128 /   60%);      ✅ ✅ ✅\n         * rgb(0,107,128 / 60%);         ❌ ❌ ❌\n         * rgb( 255, 255, 255 )          ✅ ✅ ✅\n         * rgba( 255, 255, 255 )         ✅ ✅ ✅\n         * rgba( 255, 255  , 255, )      ❌ ❌ ❌\n         * rgba( 255, 255  , 255,  .5 )  ✅ ✅ ✅\n         * rgba( 255 255 255 / 0.5 );    ✅ ✅ ✅\n         * rgba( 255 255 255   0.5 );    ❌ ❌ ❌\n         * rgba( 255 255 255 /  );       ❌ ❌ ❌\n         * ```\n         */\n        if (type.name === 'CallExpression' && callExp.startsWith('rgb')) {\n          var match = /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,?\\s*(\\d{1,3})\\s*(,\\s*\\d*\\.\\d*\\s*)?\\)/i.exec(callExp) || /rgba?\\(\\s*(\\d{1,3})\\s*(\\d{1,3})\\s*(\\d{1,3})\\s*(\\/?\\s*\\d+%)?(\\/\\s*\\d+\\.\\d\\s*)?\\)/i.exec(callExp);\n          if (!match) return;\n          var [_, r, g, b, a] = match;\n          var hex = rgbToHex(Number(r), Number(g), Number(b));\n          var widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.rgb,\n              color: hex,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha: a ? a.replace(/(\\/|,)/g, '') : ''\n            }),\n            side: 0\n          });\n          widgets.push(widget.range(from));\n        } else if (type.name === 'CallExpression' && hslMatcher(callExp)) {\n          /**\n           * # valid\n           * hsl(240, 100%, 50%)                           // ✅ comma separated\n           * hsl(240, 100%, 50%, 0.1)                      // ✅ comma separated with opacity\n           * hsl(240, 100%, 50%, 10%)                      // ✅ comma separated with % opacity\n           * hsl(240,100%,50%,0.1)                         // ✅ comma separated without spaces\n           * hsl(180deg, 100%, 50%, 0.1)                   // ✅ hue with 'deg'\n           * hsl(3.14rad, 100%, 50%, 0.1)                  // ✅ hue with 'rad'\n           * hsl(200grad, 100%, 50%, 0.1)                  // ✅ hue with 'grad'\n           * hsl(0.5turn, 100%, 50%, 0.1)                  // ✅ hue with 'turn'\n           * hsl(-240, -100%, -50%, -0.1)                  // ✅ negative values\n           * hsl(+240, +100%, +50%, +0.1)                  // ✅ explicit positive sign\n           * hsl(240.5, 99.99%, 49.999%, 0.9999)           // ✅ non-integer values\n           * hsl(.9, .99%, .999%, .9999)                   // ✅ fraction w/o leading zero\n           * hsl(0240, 0100%, 0050%, 01)                   // ✅ leading zeros\n           * hsl(240.0, 100.00%, 50.000%, 1.0000)          // ✅ trailing decimal zeros\n           * hsl(2400, 1000%, 1000%, 10)                   // ✅ out of range values\n           * hsl(-2400.01deg, -1000.5%, -1000.05%, -100)   // ✅ combination of above\n           * hsl(2.40e+2, 1.00e+2%, 5.00e+1%, 1E-3)        // ✅ scientific notation\n           * hsl(240 100% 50%)                             // ✅ space separated (CSS Color Level 4)\n           * hsl(240 100% 50% / 0.1)                       // ✅ space separated with opacity\n           * hsla(240, 100%, 50%)                          // ✅ hsla() alias\n           * hsla(240, 100%, 50%, 0.1)                     // ✅ hsla() with opacity\n           * HSL(240Deg, 100%, 50%)                        // ✅ case insensitive\n           */\n          var _match = hlsStringToRGB(callExp);\n          if (!_match) return;\n          var {\n            r: _r,\n            g: _g,\n            b: _b\n          } = _match;\n          var _hex = rgbToHex(Number(_r), Number(_g), Number(_b));\n          var _widget = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.hsl,\n              color: _hex,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha: _match.a ? _match.a.toString() : ''\n            }),\n            side: 0\n          });\n          widgets.push(_widget.range(from));\n        } else if (type.name === 'ColorLiteral') {\n          var [_color, alpha] = toFullHex(callExp);\n          var _widget2 = Decoration.widget({\n            widget: new ColorWidget({\n              colorType: ColorType.hex,\n              color: _color,\n              colorRaw: callExp,\n              from,\n              to,\n              alpha\n            }),\n            side: 0\n          });\n          widgets.push(_widget2.range(from));\n        } else if (type.name === 'ValueName') {\n          var name = callExp;\n          if (colors.includes(name)) {\n            var _widget3 = Decoration.widget({\n              widget: new ColorWidget({\n                colorType: ColorType.named,\n                color: hexs[colors.indexOf(name)],\n                colorRaw: callExp,\n                from,\n                to,\n                alpha: ''\n              }),\n              side: 0\n            });\n            widgets.push(_widget3.range(from));\n          }\n        }\n      }\n    });\n  }\n  return Decoration.set(widgets);\n}\nclass ColorWidget extends WidgetType {\n  constructor(_ref2) {\n    var {\n        color,\n        colorRaw\n      } = _ref2,\n      state = _objectWithoutPropertiesLoose(_ref2, _excluded);\n    super();\n    this.state = void 0;\n    this.color = void 0;\n    this.colorRaw = void 0;\n    this.state = state;\n    this.color = color;\n    this.colorRaw = colorRaw;\n  }\n  eq(other) {\n    return other.state.colorType === this.state.colorType && other.color === this.color && other.state.from === this.state.from && other.state.to === this.state.to && other.state.alpha === this.state.alpha;\n  }\n  toDOM() {\n    var picker = document.createElement('input');\n    colorState.set(picker, this.state);\n    picker.type = 'color';\n    picker.value = this.color;\n    picker.dataset['color'] = this.color;\n    picker.dataset['colorraw'] = this.colorRaw;\n    var wrapper = document.createElement('span');\n    wrapper.appendChild(picker);\n    wrapper.dataset['color'] = this.color;\n    wrapper.style.backgroundColor = this.colorRaw;\n    return wrapper;\n  }\n  ignoreEvent() {\n    return false;\n  }\n}\nexport var colorView = function colorView(showPicker) {\n  if (showPicker === void 0) {\n    showPicker = true;\n  }\n  return ViewPlugin.fromClass(class ColorView {\n    constructor(view) {\n      this.decorations = void 0;\n      this.decorations = colorDecorations(view);\n    }\n    update(update) {\n      if (update.docChanged || update.viewportChanged) {\n        this.decorations = colorDecorations(update.view);\n      }\n      var readOnly = update.view.contentDOM.ariaReadOnly === 'true';\n      var editable = update.view.contentDOM.contentEditable === 'true';\n      var canBeEdited = readOnly === false && editable;\n      this.changePicker(update.view, canBeEdited);\n    }\n    changePicker(view, canBeEdited) {\n      var doms = view.contentDOM.querySelectorAll('input[type=color]');\n      doms.forEach(inp => {\n        if (!showPicker) {\n          inp.setAttribute('disabled', '');\n        } else {\n          canBeEdited ? inp.removeAttribute('disabled') : inp.setAttribute('disabled', '');\n        }\n      });\n    }\n  }, {\n    decorations: v => v.decorations,\n    eventHandlers: {\n      change: (e, view) => {\n        var target = e.target;\n        if (target.nodeName !== 'INPUT' || !target.parentElement || !target.dataset.color && !target.dataset.colorraw) return false;\n        var data = colorState.get(target);\n        var value = target.value;\n        var rgb = hexToRgb(value);\n        var colorraw = target.dataset.colorraw;\n        var slash = (target.dataset.colorraw || '').indexOf('/') > 4;\n        var comma = (target.dataset.colorraw || '').indexOf(',') > 4;\n        var converted = target.value;\n        if (data.colorType === ColorType.rgb) {\n          var funName = colorraw != null && colorraw.match(/^(rgba?)/) ? colorraw == null ? void 0 : colorraw.match(/^(rgba?)/)[0] : undefined;\n          if (comma) {\n            converted = rgb ? funName + \"(\" + rgb.r + \", \" + rgb.g + \", \" + rgb.b + (data.alpha ? ', ' + data.alpha.trim() : '') + \")\" : value;\n          } else if (slash) {\n            converted = rgb ? funName + \"(\" + rgb.r + \" \" + rgb.g + \" \" + rgb.b + (data.alpha ? ' / ' + data.alpha.trim() : '') + \")\" : value;\n          } else {\n            converted = rgb ? funName + \"(\" + rgb.r + \" \" + rgb.g + \" \" + rgb.b + \")\" : value;\n          }\n        } else if (data.colorType === ColorType.hsl) {\n          var _rgb = hexToRgb(value);\n          if (_rgb) {\n            var {\n              h,\n              s,\n              l\n            } = RGBToHSL(_rgb == null ? void 0 : _rgb.r, _rgb == null ? void 0 : _rgb.g, _rgb == null ? void 0 : _rgb.b);\n            converted = \"hsl(\" + h + \"deg \" + s + \"% \" + l + \"%\" + (data.alpha ? ' / ' + data.alpha : '') + \")\";\n          }\n        }\n        view.dispatch({\n          changes: {\n            from: data.from,\n            to: data.to,\n            insert: converted\n          }\n        });\n        return true;\n      }\n    }\n  });\n};\nexport var colorTheme = EditorView.baseTheme({\n  'span[data-color]': {\n    width: '12px',\n    height: '12px',\n    display: 'inline-block',\n    borderRadius: '2px',\n    marginRight: '0.5ch',\n    outline: '1px solid #00000040',\n    overflow: 'hidden',\n    verticalAlign: 'middle',\n    marginTop: '-2px'\n  },\n  'span[data-color] input[type=\"color\"]': {\n    background: 'transparent',\n    display: 'block',\n    border: 'none',\n    outline: '0',\n    paddingLeft: '24px',\n    height: '12px'\n  },\n  'span[data-color] input[type=\"color\"]::-webkit-color-swatch': {\n    border: 'none',\n    paddingLeft: '24px'\n  }\n});\nexport var color = [colorView(), colorTheme];"],
  "mappings": ";;;;;;;;;;;;;;;;AAGA,IAAM,QAAQ;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAGF,IAAA,cAAe;;;ACvJf,IAAM,OAAO;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;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",
  "names": ["lib_default", "color", "ColorType", "lib_default", "color", "colorView"]
}
