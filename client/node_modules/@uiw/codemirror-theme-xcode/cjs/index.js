"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xcodeLight = exports.xcodeDarkInit = exports.xcodeDark = exports.defaultSettingsXcodeLight = exports.defaultSettingsXcodeDark = void 0;
exports.xcodeLightInit = xcodeLightInit;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _highlight = require("@lezer/highlight");
var _codemirrorThemes = require("@uiw/codemirror-themes");
/**
 * @name Xcode
 */

var defaultSettingsXcodeLight = exports.defaultSettingsXcodeLight = {
  background: '#fff',
  foreground: '#3D3D3D',
  selection: '#BBDFFF',
  selectionMatch: '#BBDFFF',
  gutterBackground: '#fff',
  gutterForeground: '#AFAFAF',
  lineHighlight: '#d5e6ff69'
};
function xcodeLightInit(options) {
  var _ref = options || {},
    _ref$theme = _ref.theme,
    theme = _ref$theme === void 0 ? 'light' : _ref$theme,
    _ref$settings = _ref.settings,
    settings = _ref$settings === void 0 ? {} : _ref$settings,
    _ref$styles = _ref.styles,
    styles = _ref$styles === void 0 ? [] : _ref$styles;
  return (0, _codemirrorThemes.createTheme)({
    theme: theme,
    settings: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, defaultSettingsXcodeLight), settings),
    styles: [{
      tag: [_highlight.tags.comment, _highlight.tags.quote],
      color: '#707F8D'
    }, {
      tag: [_highlight.tags.typeName, _highlight.tags.typeOperator],
      color: '#aa0d91'
    }, {
      tag: [_highlight.tags.keyword],
      color: '#aa0d91',
      fontWeight: 'bold'
    }, {
      tag: [_highlight.tags.string, _highlight.tags.meta],
      color: '#D23423'
    }, {
      tag: [_highlight.tags.name],
      color: '#032f62'
    }, {
      tag: [_highlight.tags.typeName],
      color: '#522BB2'
    }, {
      tag: [_highlight.tags.variableName],
      color: '#23575C'
    }, {
      tag: [_highlight.tags.definition(_highlight.tags.variableName)],
      color: '#327A9E'
    }, {
      tag: [_highlight.tags.regexp, _highlight.tags.link],
      color: '#0e0eff'
    }].concat((0, _toConsumableArray2["default"])(styles))
  });
}
var xcodeLight = exports.xcodeLight = xcodeLightInit();
var defaultSettingsXcodeDark = exports.defaultSettingsXcodeDark = {
  background: '#292A30',
  foreground: '#CECFD0',
  caret: '#fff',
  selection: '#727377',
  selectionMatch: '#727377',
  lineHighlight: '#ffffff0f'
};
var xcodeDarkInit = exports.xcodeDarkInit = function xcodeDarkInit(options) {
  var _ref2 = options || {},
    _ref2$theme = _ref2.theme,
    theme = _ref2$theme === void 0 ? 'dark' : _ref2$theme,
    _ref2$settings = _ref2.settings,
    settings = _ref2$settings === void 0 ? {} : _ref2$settings,
    _ref2$styles = _ref2.styles,
    styles = _ref2$styles === void 0 ? [] : _ref2$styles;
  return (0, _codemirrorThemes.createTheme)({
    theme: theme,
    settings: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, defaultSettingsXcodeDark), settings),
    styles: [{
      tag: [_highlight.tags.comment, _highlight.tags.quote],
      color: '#7F8C98'
    }, {
      tag: [_highlight.tags.keyword],
      color: '#FF7AB2',
      fontWeight: 'bold'
    }, {
      tag: [_highlight.tags.string, _highlight.tags.meta],
      color: '#FF8170'
    }, {
      tag: [_highlight.tags.typeName],
      color: '#DABAFF'
    }, {
      tag: [_highlight.tags.definition(_highlight.tags.variableName)],
      color: '#6BDFFF'
    }, {
      tag: [_highlight.tags.name],
      color: '#6BAA9F'
    }, {
      tag: [_highlight.tags.variableName],
      color: '#ACF2E4'
    }, {
      tag: [_highlight.tags.regexp, _highlight.tags.link],
      color: '#FF8170'
    }].concat((0, _toConsumableArray2["default"])(styles))
  });
};
var xcodeDark = exports.xcodeDark = xcodeDarkInit();