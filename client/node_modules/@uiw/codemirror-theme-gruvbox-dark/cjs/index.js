"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gruvboxLightInit = exports.gruvboxLight = exports.gruvboxDarkInit = exports.gruvboxDark = exports.defaultSettingsGruvboxLight = exports.defaultSettingsGruvboxDark = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _highlight = require("@lezer/highlight");
var _codemirrorThemes = require("@uiw/codemirror-themes");
/**
 * @name gruvbox-dark
 * @author morhetz
 * Name: Gruvbox
 * From github.com/codemirror/codemirror5/blob/master/theme/gruvbox-dark.css
 */

var defaultSettingsGruvboxDark = exports.defaultSettingsGruvboxDark = {
  background: '#282828',
  foreground: '#ebdbb2',
  caret: '#ebdbb2',
  selection: '#b99d555c',
  selectionMatch: '#b99d555c',
  lineHighlight: '#baa1602b',
  gutterBackground: '#282828',
  gutterForeground: '#7c6f64'
};
var gruvboxDarkInit = exports.gruvboxDarkInit = function gruvboxDarkInit(options) {
  var _ref = options || {},
    _ref$theme = _ref.theme,
    theme = _ref$theme === void 0 ? 'dark' : _ref$theme,
    _ref$settings = _ref.settings,
    settings = _ref$settings === void 0 ? {} : _ref$settings,
    _ref$styles = _ref.styles,
    styles = _ref$styles === void 0 ? [] : _ref$styles;
  return (0, _codemirrorThemes.createTheme)({
    theme: theme,
    settings: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, defaultSettingsGruvboxDark), settings),
    styles: [{
      tag: _highlight.tags.keyword,
      color: '#fb4934'
    }, {
      tag: [_highlight.tags.name, _highlight.tags.deleted, _highlight.tags.character, _highlight.tags.propertyName, _highlight.tags.macroName],
      color: '#8ec07c'
    }, {
      tag: [_highlight.tags.variableName],
      color: '#83a598'
    }, {
      tag: [_highlight.tags["function"](_highlight.tags.variableName)],
      color: '#b8bb26',
      fontStyle: 'bold'
    }, {
      tag: [_highlight.tags.labelName],
      color: '#ebdbb2'
    }, {
      tag: [_highlight.tags.color, _highlight.tags.constant(_highlight.tags.name), _highlight.tags.standard(_highlight.tags.name)],
      color: '#d3869b'
    }, {
      tag: [_highlight.tags.definition(_highlight.tags.name), _highlight.tags.separator],
      color: '#ebdbb2'
    }, {
      tag: [_highlight.tags.brace],
      color: '#ebdbb2'
    }, {
      tag: [_highlight.tags.annotation],
      color: '#fb4934d'
    }, {
      tag: [_highlight.tags.number, _highlight.tags.changed, _highlight.tags.annotation, _highlight.tags.modifier, _highlight.tags.self, _highlight.tags.namespace],
      color: '#d3869b'
    }, {
      tag: [_highlight.tags.typeName, _highlight.tags.className],
      color: '#fabd2f'
    }, {
      tag: [_highlight.tags.operator, _highlight.tags.operatorKeyword],
      color: '#fb4934'
    }, {
      tag: [_highlight.tags.tagName],
      color: '#8ec07c',
      fontStyle: 'bold'
    }, {
      tag: [_highlight.tags.squareBracket],
      color: '#fe8019'
    }, {
      tag: [_highlight.tags.angleBracket],
      color: '#83a598'
    }, {
      tag: [_highlight.tags.attributeName],
      color: '#8ec07c'
    }, {
      tag: [_highlight.tags.regexp],
      color: '#8ec07c'
    }, {
      tag: [_highlight.tags.quote],
      color: '#928374'
    }, {
      tag: [_highlight.tags.string],
      color: '#ebdbb2'
    }, {
      tag: _highlight.tags.link,
      color: '#a89984',
      textDecoration: 'underline',
      textUnderlinePosition: 'under'
    }, {
      tag: [_highlight.tags.url, _highlight.tags.escape, _highlight.tags.special(_highlight.tags.string)],
      color: '#d3869b'
    }, {
      tag: [_highlight.tags.meta],
      color: '#fabd2f'
    }, {
      tag: [_highlight.tags.comment],
      color: '#928374',
      fontStyle: 'italic'
    }, {
      tag: _highlight.tags.strong,
      fontWeight: 'bold',
      color: '#fe8019'
    }, {
      tag: _highlight.tags.emphasis,
      fontStyle: 'italic',
      color: '#b8bb26'
    }, {
      tag: _highlight.tags.strikethrough,
      textDecoration: 'line-through'
    }, {
      tag: _highlight.tags.heading,
      fontWeight: 'bold',
      color: '#b8bb26'
    }, {
      tag: [_highlight.tags.heading1, _highlight.tags.heading2],
      fontWeight: 'bold',
      color: '#b8bb26'
    }, {
      tag: [_highlight.tags.heading3, _highlight.tags.heading4],
      fontWeight: 'bold',
      color: '#fabd2f'
    }, {
      tag: [_highlight.tags.heading5, _highlight.tags.heading6],
      color: '#fabd2f'
    }, {
      tag: [_highlight.tags.atom, _highlight.tags.bool, _highlight.tags.special(_highlight.tags.variableName)],
      color: '#d3869b'
    }, {
      tag: [_highlight.tags.processingInstruction, _highlight.tags.inserted],
      color: '#83a598'
    }, {
      tag: [_highlight.tags.contentSeparator],
      color: '#fb4934'
    }, {
      tag: _highlight.tags.invalid,
      color: '#fe8019',
      borderBottom: "1px dotted #fb4934d"
    }].concat((0, _toConsumableArray2["default"])(styles))
  });
};
var gruvboxDark = exports.gruvboxDark = gruvboxDarkInit();
var defaultSettingsGruvboxLight = exports.defaultSettingsGruvboxLight = {
  background: '#fbf1c7',
  foreground: '#3c3836',
  caret: '#af3a03',
  selection: '#bdae9391',
  selectionMatch: '#bdae9391',
  lineHighlight: '#a37f2238',
  gutterBackground: '#ebdbb2',
  gutterForeground: '#665c54',
  gutterBorder: 'transparent'
};
var gruvboxLightInit = exports.gruvboxLightInit = function gruvboxLightInit(options) {
  var _ref2 = options || {},
    _ref2$theme = _ref2.theme,
    theme = _ref2$theme === void 0 ? 'light' : _ref2$theme,
    _ref2$settings = _ref2.settings,
    settings = _ref2$settings === void 0 ? {} : _ref2$settings,
    _ref2$styles = _ref2.styles,
    styles = _ref2$styles === void 0 ? [] : _ref2$styles;
  return (0, _codemirrorThemes.createTheme)({
    theme: theme,
    settings: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, defaultSettingsGruvboxLight), settings),
    styles: [{
      tag: _highlight.tags.keyword,
      color: '#9d0006'
    }, {
      tag: [_highlight.tags.name, _highlight.tags.deleted, _highlight.tags.character, _highlight.tags.propertyName, _highlight.tags.macroName],
      color: '#427b58'
    }, {
      tag: [_highlight.tags.variableName],
      color: '#076678'
    }, {
      tag: [_highlight.tags["function"](_highlight.tags.variableName)],
      color: '#79740e',
      fontStyle: 'bold'
    }, {
      tag: [_highlight.tags.labelName],
      color: '#3c3836'
    }, {
      tag: [_highlight.tags.color, _highlight.tags.constant(_highlight.tags.name), _highlight.tags.standard(_highlight.tags.name)],
      color: '#8f3f71'
    }, {
      tag: [_highlight.tags.definition(_highlight.tags.name), _highlight.tags.separator],
      color: '#3c3836'
    }, {
      tag: [_highlight.tags.brace],
      color: '#3c3836'
    }, {
      tag: [_highlight.tags.annotation],
      color: '#9d0006'
    }, {
      tag: [_highlight.tags.number, _highlight.tags.changed, _highlight.tags.annotation, _highlight.tags.modifier, _highlight.tags.self, _highlight.tags.namespace],
      color: '#8f3f71'
    }, {
      tag: [_highlight.tags.typeName, _highlight.tags.className],
      color: '#b57614'
    }, {
      tag: [_highlight.tags.operator, _highlight.tags.operatorKeyword],
      color: '#9d0006'
    }, {
      tag: [_highlight.tags.tagName],
      color: '#427b58',
      fontStyle: 'bold'
    }, {
      tag: [_highlight.tags.squareBracket],
      color: '#af3a03'
    }, {
      tag: [_highlight.tags.angleBracket],
      color: '#076678'
    }, {
      tag: [_highlight.tags.attributeName],
      color: '#427b58'
    }, {
      tag: [_highlight.tags.regexp],
      color: '#427b58'
    }, {
      tag: [_highlight.tags.quote],
      color: '#928374'
    }, {
      tag: [_highlight.tags.string],
      color: '#3c3836'
    }, {
      tag: _highlight.tags.link,
      color: '#7c6f64',
      textDecoration: 'underline',
      textUnderlinePosition: 'under'
    }, {
      tag: [_highlight.tags.url, _highlight.tags.escape, _highlight.tags.special(_highlight.tags.string)],
      color: '#8f3f71'
    }, {
      tag: [_highlight.tags.meta],
      color: '#b57614'
    }, {
      tag: [_highlight.tags.comment],
      color: '#928374',
      fontStyle: 'italic'
    }, {
      tag: _highlight.tags.strong,
      fontWeight: 'bold',
      color: '#af3a03'
    }, {
      tag: _highlight.tags.emphasis,
      fontStyle: 'italic',
      color: '#79740e'
    }, {
      tag: _highlight.tags.strikethrough,
      textDecoration: 'line-through'
    }, {
      tag: _highlight.tags.heading,
      fontWeight: 'bold',
      color: '#79740e'
    }, {
      tag: [_highlight.tags.heading1, _highlight.tags.heading2],
      fontWeight: 'bold',
      color: '#79740e'
    }, {
      tag: [_highlight.tags.heading3, _highlight.tags.heading4],
      fontWeight: 'bold',
      color: '#b57614'
    }, {
      tag: [_highlight.tags.heading5, _highlight.tags.heading6],
      color: '#b57614'
    }, {
      tag: [_highlight.tags.atom, _highlight.tags.bool, _highlight.tags.special(_highlight.tags.variableName)],
      color: '#8f3f71'
    }, {
      tag: [_highlight.tags.processingInstruction, _highlight.tags.inserted],
      color: '#076678'
    }, {
      tag: [_highlight.tags.contentSeparator],
      color: '#9d0006'
    }, {
      tag: _highlight.tags.invalid,
      color: '#af3a03',
      borderBottom: "1px dotted #9d0006"
    }].concat((0, _toConsumableArray2["default"])(styles))
  });
};
var gruvboxLight = exports.gruvboxLight = gruvboxLightInit();