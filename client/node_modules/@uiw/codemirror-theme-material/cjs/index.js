"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.materialLightInit = exports.materialLight = exports.materialInit = exports.materialDarkInit = exports.materialDark = exports.material = exports.defaultSettingsMaterialLight = exports.defaultSettingsMaterialDark = exports.defaultSettingsMaterial = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _highlight = require("@lezer/highlight");
var _codemirrorThemes = require("@uiw/codemirror-themes");
var defaultSettingsMaterial = exports.defaultSettingsMaterial = {
  background: '#2e3235',
  foreground: '#bdbdbd',
  caret: '#a0a4ae',
  selection: '#d7d4f063',
  selectionMatch: '#d7d4f063',
  gutterBackground: '#2e3235',
  gutterForeground: '#999',
  gutterActiveForeground: '#4f5b66',
  lineHighlight: '#545b6130'
};
var defaultSettingsMaterialDark = exports.defaultSettingsMaterialDark = defaultSettingsMaterial;
var materialInit = exports.materialInit = function materialInit(options) {
  var _ref = options || {},
    _ref$theme = _ref.theme,
    theme = _ref$theme === void 0 ? 'dark' : _ref$theme,
    _ref$settings = _ref.settings,
    settings = _ref$settings === void 0 ? {} : _ref$settings,
    _ref$styles = _ref.styles,
    styles = _ref$styles === void 0 ? [] : _ref$styles;
  return (0, _codemirrorThemes.createTheme)({
    theme: theme,
    settings: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, defaultSettingsMaterial), settings),
    styles: [{
      tag: _highlight.tags.keyword,
      color: '#cf6edf'
    }, {
      tag: [_highlight.tags.name, _highlight.tags.deleted, _highlight.tags.character, _highlight.tags.macroName],
      color: '#56c8d8'
    }, {
      tag: [_highlight.tags.propertyName],
      color: '#facf4e'
    }, {
      tag: [_highlight.tags.variableName],
      color: '#bdbdbd'
    }, {
      tag: [_highlight.tags["function"](_highlight.tags.variableName)],
      color: '#56c8d8'
    }, {
      tag: [_highlight.tags.labelName],
      color: '#cf6edf'
    }, {
      tag: [_highlight.tags.color, _highlight.tags.constant(_highlight.tags.name), _highlight.tags.standard(_highlight.tags.name)],
      color: '#facf4e'
    }, {
      tag: [_highlight.tags.definition(_highlight.tags.name), _highlight.tags.separator],
      color: '#fa5788'
    }, {
      tag: [_highlight.tags.brace],
      color: '#cf6edf'
    }, {
      tag: [_highlight.tags.annotation],
      color: '#ff5f52'
    }, {
      tag: [_highlight.tags.number, _highlight.tags.changed, _highlight.tags.annotation, _highlight.tags.modifier, _highlight.tags.self, _highlight.tags.namespace],
      color: '#ffad42'
    }, {
      tag: [_highlight.tags.typeName, _highlight.tags.className],
      color: '#ffad42'
    }, {
      tag: [_highlight.tags.operator, _highlight.tags.operatorKeyword],
      color: '#7186f0'
    }, {
      tag: [_highlight.tags.tagName],
      color: '#99d066'
    }, {
      tag: [_highlight.tags.squareBracket],
      color: '#ff5f52'
    }, {
      tag: [_highlight.tags.angleBracket],
      color: '#606f7a'
    }, {
      tag: [_highlight.tags.attributeName],
      color: '#bdbdbd'
    }, {
      tag: [_highlight.tags.regexp],
      color: '#ff5f52'
    }, {
      tag: [_highlight.tags.quote],
      color: '#6abf69'
    }, {
      tag: [_highlight.tags.string],
      color: '#99d066'
    }, {
      tag: _highlight.tags.link,
      color: '#56c8d8',
      textDecoration: 'underline',
      textUnderlinePosition: 'under'
    }, {
      tag: [_highlight.tags.url, _highlight.tags.escape, _highlight.tags.special(_highlight.tags.string)],
      color: '#facf4e'
    }, {
      tag: [_highlight.tags.meta],
      color: '#707d8b'
    }, {
      tag: [_highlight.tags.comment],
      color: '#707d8b',
      fontStyle: 'italic'
    }, {
      tag: _highlight.tags.monospace,
      color: '#bdbdbd'
    }, {
      tag: _highlight.tags.strong,
      fontWeight: 'bold',
      color: '#ff5f52'
    }, {
      tag: _highlight.tags.emphasis,
      fontStyle: 'italic',
      color: '#99d066'
    }, {
      tag: _highlight.tags.strikethrough,
      textDecoration: 'line-through'
    }, {
      tag: _highlight.tags.heading,
      fontWeight: 'bold',
      color: '#facf4e'
    }, {
      tag: _highlight.tags.heading1,
      fontWeight: 'bold',
      color: '#facf4e'
    }, {
      tag: [_highlight.tags.heading2, _highlight.tags.heading3, _highlight.tags.heading4],
      fontWeight: 'bold',
      color: '#facf4e'
    }, {
      tag: [_highlight.tags.heading5, _highlight.tags.heading6],
      color: '#facf4e'
    }, {
      tag: [_highlight.tags.atom, _highlight.tags.bool, _highlight.tags.special(_highlight.tags.variableName)],
      color: '#56c8d8'
    }, {
      tag: [_highlight.tags.processingInstruction, _highlight.tags.inserted],
      color: '#ff5f52'
    }, {
      tag: [_highlight.tags.contentSeparator],
      color: '#56c8d8'
    }, {
      tag: _highlight.tags.invalid,
      color: '#606f7a',
      borderBottom: "1px dotted #ff5f52"
    }].concat((0, _toConsumableArray2["default"])(styles))
  });
};
var materialDarkInit = exports.materialDarkInit = materialInit;
var materialDark = exports.materialDark = materialInit();
var material = exports.material = materialInit();
var defaultSettingsMaterialLight = exports.defaultSettingsMaterialLight = {
  background: '#FAFAFA',
  foreground: '#90A4AE',
  caret: '#272727',
  selection: '#80CBC440',
  selectionMatch: '#80CBC440',
  gutterBackground: '#FAFAFA',
  gutterForeground: '#90A4AE',
  gutterBorder: 'transparent',
  lineHighlight: '#CCD7DA50'
};
var materialLightInit = exports.materialLightInit = function materialLightInit(options) {
  var _ref2 = options || {},
    _ref2$theme = _ref2.theme,
    theme = _ref2$theme === void 0 ? 'light' : _ref2$theme,
    _ref2$settings = _ref2.settings,
    settings = _ref2$settings === void 0 ? {} : _ref2$settings,
    _ref2$styles = _ref2.styles,
    styles = _ref2$styles === void 0 ? [] : _ref2$styles;
  return (0, _codemirrorThemes.createTheme)({
    theme: theme,
    settings: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, defaultSettingsMaterialLight), settings),
    styles: [{
      tag: _highlight.tags.keyword,
      color: '#39ADB5'
    }, {
      tag: [_highlight.tags.name, _highlight.tags.deleted, _highlight.tags.character, _highlight.tags.macroName],
      color: '#90A4AE'
    }, {
      tag: [_highlight.tags.propertyName],
      color: '#6182B8'
    }, {
      tag: [_highlight.tags.processingInstruction, _highlight.tags.string, _highlight.tags.inserted, _highlight.tags.special(_highlight.tags.string)],
      color: '#91B859'
    }, {
      tag: [_highlight.tags["function"](_highlight.tags.variableName), _highlight.tags.labelName],
      color: '#6182B8'
    }, {
      tag: [_highlight.tags.color, _highlight.tags.constant(_highlight.tags.name), _highlight.tags.standard(_highlight.tags.name)],
      color: '#39ADB5'
    }, {
      tag: [_highlight.tags.definition(_highlight.tags.name), _highlight.tags.separator],
      color: '#90A4AE'
    }, {
      tag: [_highlight.tags.className],
      color: '#E2931D'
    }, {
      tag: [_highlight.tags.number, _highlight.tags.changed, _highlight.tags.annotation, _highlight.tags.modifier, _highlight.tags.self, _highlight.tags.namespace],
      color: '#F76D47'
    }, {
      tag: [_highlight.tags.typeName],
      color: '#E2931D',
      fontStyle: '#E2931D'
    }, {
      tag: [_highlight.tags.operator, _highlight.tags.operatorKeyword],
      color: '#39ADB5'
    }, {
      tag: [_highlight.tags.url, _highlight.tags.escape, _highlight.tags.regexp, _highlight.tags.link],
      color: '#91B859'
    }, {
      tag: [_highlight.tags.meta, _highlight.tags.comment],
      color: '#90A4AE'
    }, {
      tag: _highlight.tags.strong,
      fontWeight: 'bold'
    }, {
      tag: _highlight.tags.emphasis,
      fontStyle: 'italic'
    }, {
      tag: _highlight.tags.link,
      textDecoration: 'underline'
    }, {
      tag: _highlight.tags.heading,
      fontWeight: 'bold',
      color: '#39ADB5'
    }, {
      tag: [_highlight.tags.atom, _highlight.tags.bool, _highlight.tags.special(_highlight.tags.variableName)],
      color: '#90A4AE'
    }, {
      tag: _highlight.tags.invalid,
      color: '#E5393570'
    }, {
      tag: _highlight.tags.strikethrough,
      textDecoration: 'line-through'
    }].concat((0, _toConsumableArray2["default"])(styles))
  });
};
var materialLight = exports.materialLight = materialLightInit();