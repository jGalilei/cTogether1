"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultSettingsAtomone = exports.atomoneInit = exports.atomone = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _highlight = require("@lezer/highlight");
var _codemirrorThemes = require("@uiw/codemirror-themes");
/**
 * @name Atom One
 * Atom One dark syntax theme
 *
 * https://github.com/atom/one-dark-syntax
 */

var defaultSettingsAtomone = exports.defaultSettingsAtomone = {
  background: '#272C35',
  foreground: '#9d9b97',
  caret: '#797977',
  selection: '#3d4c64',
  selectionMatch: '#3d4c64',
  gutterBackground: '#272C35',
  gutterForeground: '#465063',
  gutterBorder: 'transparent',
  lineHighlight: '#2e3f5940'
};
var atomoneInit = exports.atomoneInit = function atomoneInit(options) {
  var _ref = options || {},
    _ref$theme = _ref.theme,
    theme = _ref$theme === void 0 ? 'dark' : _ref$theme,
    _ref$settings = _ref.settings,
    settings = _ref$settings === void 0 ? {} : _ref$settings,
    _ref$styles = _ref.styles,
    styles = _ref$styles === void 0 ? [] : _ref$styles;
  return (0, _codemirrorThemes.createTheme)({
    theme: theme,
    settings: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, defaultSettingsAtomone), settings),
    styles: [{
      tag: [_highlight.tags["function"](_highlight.tags.variableName), _highlight.tags["function"](_highlight.tags.propertyName), _highlight.tags.url, _highlight.tags.processingInstruction],
      color: 'hsl(207, 82%, 66%)'
    }, {
      tag: [_highlight.tags.tagName, _highlight.tags.heading],
      color: '#e06c75'
    }, {
      tag: _highlight.tags.comment,
      color: '#54636D'
    }, {
      tag: [_highlight.tags.propertyName],
      color: 'hsl(220, 14%, 71%)'
    }, {
      tag: [_highlight.tags.attributeName, _highlight.tags.number],
      color: 'hsl( 29, 54%, 61%)'
    }, {
      tag: _highlight.tags.className,
      color: 'hsl( 39, 67%, 69%)'
    }, {
      tag: _highlight.tags.keyword,
      color: 'hsl(286, 60%, 67%)'
    }, {
      tag: [_highlight.tags.string, _highlight.tags.regexp, _highlight.tags.special(_highlight.tags.propertyName)],
      color: '#98c379'
    }].concat((0, _toConsumableArray2["default"])(styles))
  });
};
var atomone = exports.atomone = atomoneInit();